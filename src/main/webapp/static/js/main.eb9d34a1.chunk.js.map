{"version":3,"sources":["config.js","TopMenu.js","components/ActivityElementTD.js","components/ActivityRow.js","components/AgendaTable.jsx","components/CheckboxComp.js","components/TextSubElement.js","components/PopOutLinkSubElement.js","components/EmbeddedLinkSubelement.js","components/QuizSubElement.js","components/ConceptQuestionSubElement.js","components/ProgrammingBox.jsx","components/ProgrammingSubElement.js","components/ActivityElementModal.js","AgendaPage.jsx","jwthandler.js","LoginPage.js","CourseInfoPage.jsx","SyllabusPage.js","ForumPage.js","components/CourseAdminMenu.js","rest/Rip.js","components/EditableHeadLine.js","components/EditableText.js","components/CourseAdminMain.js","CourseAdminPage.js","PortalAdminPage.js","ProfilePage.js","App.js","stores/TokenStore.js","stores/ProfileStore.js","index.js","ripple.svg"],"names":["Config","ApiPath","campusNetServiceUrl","TOKEN_NAME","TopMenu","props","sortEnd","oldIndex","newIndex","console","log","onLinksUpdated","arrayMove","links","handlenewLinkClicked","setState","showModal","handlesubmitLink","e","preventDefault","push","text","state","textInput","href","hrefInput","handleLinkRemove","filter","link","handleAvatarClick","eventKey","avatar","id","onLogout","onProfileEdit","redirectUrl","window","location","replace","handleNavSelect","active","onSelect","getUserMenu","NavDropdown","title","NavItem","getNavContent","menuItems","map","nav","no","type","key","component","items","sort","a","b","item","MenuItem","pullRight","getLinkContent","style","styles","onClick","open","isAdmin","user","course","admins","includes","activeId","this","isLoggedIn","className","Navbar","fluid","Header","Toggle","Collapse","Nav","SortableNav","helperClass","useWindowAsScrollContainer","useDragHandle","onSortEnd","newLink","removeLink","Modal","bsSize","show","onHide","closeButton","Body","Form","horizontal","FormGroup","controlId","Col","componentClass","ControlLabel","sm","FormControl","placeholder","value","onChange","target","smOffset","Button","Component","DragHandle","SortableHandle","Glyphicon","glyph","SortableItem","SortableElement","stopPropagation","SortableContainer","index","ActivityElementTD","handleActivityElementClick","activityElement","activityElementType","linkElement","now","Number","progress","toFixed","showProgress","subElements","length","OverlayTrigger","placement","overlay","Tooltip","ProgressBar","bsStyle","label","color","ActivityRow","activity","activityElementList","done","forEach","date","Date","endDate","dateString","getDate","getMonth","getUTCHours","getUTCMinutes","toString","checkIfDone","status","description","getActivityElements","AgendaTable","coursePlan","courseActivityList","loading","headers","headerTitle","activityElementCount","colSpan","Table","hover","getHeaderLine","getActivities","defaultProps","CheckboxComp","handlecheck","checked","onCheck","uuid","Math","floor","random","htmlFor","TextSubElement","handleChange","textBoxId","ListGroupItem","checkBoxId","header","Grid","Row","borderWidth","borderStyle","borderColor","html","notes","PopOutLinkSubElement","itemClicked","EmbeddedLinkSubelement","fontSize","minHeight","float","width","seamless","frameBorder","src","QuizSubElement","defaultChecked","ConceptQuestionSubElement","ProgrammingBox","handleCodeChange","newContents","activeIndex","activeFile","newState","update","files","fileContents","$set","handleAceEditorChange","handleRunClick","requestObj","mainClass","input","requestJSON","JSON","stringify","runState","compiling","systemOut","systemErr","fetch","method","mode","body","Headers","then","response","json","runRes","runResult","getSystemOut","mapLines","getSystemErr","array","line","code","annotations","theme","name","height","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","ButtonGroup","PanelGroup","Panel","overflowY","fontFamily","ProgrammingSubElement","compileUrl","ActivityElementModal","getSubElementBoxes","subElement","subElementType","content","handleCheck","handleTextBoxChange","hyperLink","getMenuElements","subelement","scrollToTop","scrollTo","hideModal","handleSubElementCheck","handleNotes","calculateProgress","finished","Array","isArray","element","dialogClassName","contentLabel","margin","md","Well","cursor","paddingLeft","paddingRight","ListGroup","Agenda","handleActivityClick","activeActivityId","activeActivityElementId","handleSubElementNotes","linksUrl","apiUrl","linksPath","activityElementUrl","activityElementsPath","activitySubElements","activeActivityElement","coursePlanLoading","ripple","alt","ref","courseplansPath","googlepath","generalLinksTitle","courseLinksTitle","JwtHandler","getUser","token","getToken","claims","split","decodedClams","decodeURIComponent","encodeURI","atob","jsonClaims","parse","localStorage","getItem","setToken","setItem","clearUser","removeItem","LoginPage","cnLogin","xsOffset","xs","CourseInfoPage","updateLine","event","updateTitle","addLine","conent","deleteLine","splice","cancelChange","saveLines","saveContent","generateEditableList","info","generateList","dangerouslySetInnerHTML","__html","undefined","SyllabusPage","ForumPage","CourseAdminMenu","handleCourseSelection","courseId","courseClicked","handleNewCourseClick","newCourseClicked","courseList","courseShortHand","courseName","generateCourseList","createCourses","Rip","apiUrL","userName","callback","catchback","del","post","getJson","url","jwtToken","handleJSON","catch","message","getPlain","getNoCors","alert","put","postForString","ok","ripError","error","riperror","getOwnDb","apiURL","EditableHeadLine","editmode","shortHand","newInput","handleShortHandChange","handleCourseNameChage","handleGlyphOkClick","handleGlyphClick","handleTextChage","CourseAdminMain","handlesheetBoxChange","sheetBox","handleUsesGoogleSheet","usesGoogleSheet","handleCSVChange","csv","handleCSVSubmit","newUserCSVSubmitted","newShortAndTitle","short","newGoogleSheetId","users","firstName","lastName","email","admin","roleChecked","ta","student","coursePlanSource","googleSheetId","googleSheetPlanId","syncing","syncError","inline","sheetId","syncCoursePlan","disabled","responsive","generateUsertableBody","rows","HelpBlock","CourseAdminPage","courseCallBack","newCurrentCourse","currentCourse","currentCourseId","fetchUserList","courseCatchBack","data","courseSelected","foundCourses","coursePath","newCourseSelected","errorMsg","updateCourseUsesGoogleSheet","currentCourseUrl","String","getCourses","syncCourseCurrentCoursePlan","checkForCourseAdmin","isCourseAdmin","roles","role","roleName","userId","toast","success","autoClose","userUpdate","csvString","usersString","usersCsv","toastLoading","dismiss","shortAndName","warn","userIsCourseAdmin","newUserAdded","addUserToCourse","addUserCSVToCourse","updateCourseShortAndName","handleRoleCheck","PortalAdminPage","userUrl","getUsers","checkUserRoles","isPortalAdmin","toggleCourseAdmin","updateUser","warning","togglePortalAdmin","newUser","checkBoxFormatterPortalAdmin","cell","row","checkBoxFormatterCourseAdmin","booleanSortPortalAdmin","order","orderInt","booleanSortCourseAdmin","position","pagination","options","paginationPosition","sizePerPageList","dataField","isKey","hidden","dataSort","dataFormat","sortFunc","ProfilePage","deletedb","confirm","store","createDB","updatePass","updateUserBtnPressed","updatedUser","resetForm","dbInfo","Label","hostUrl","pass","revoked","size","observer","App","generateAdminDropDown","portalAdmin","courseAdmin","adminOfCourses","adminMenu","updateLinks","courseLinks","saveInfoContent","courseInfoLines","generateAgendaDropDown","agendaInfoMap","activeAgenda","agendaId","onMenuSelect","newNavbar","string","navbar","activePage","fetchCourse","onProfileEditSelect","fetchCoursePlan","courseplanId","get","fetchAgenda","coursePlanLoadErrorMsg","agenda","mergeAgendaWithCoursePlan","courseActivity","activityArray","mergeAgendaWithCourseActivity","activityElementArray","mergeAgendaWithAcvitityElement","hard","getComponent","stores","ProfileStore","activityId","activityElementId","activitySubElementId","newAgenda","elementMetaData","ensureTree","metaDataList","progression","activElementId","TokenStore","fetchUser","pages","0","period","1","courseLines","coursePlanId","Object","keys","agendaDropDown","adminDropDown","activitySubElement","activitySubElementArray","Agendaelement","checkUserHasOneOfRoles","hasRole","getClaims","userRole","decodeClaims","escape","reaction","startAutoCheck","exp","clearTimeout","timer","timeOut","setTimeout","logout","decorate","observable","action","computed","sampleViewer","fullViewer","updateSelf","api","tokenStore","createOwnDb","fetchDb","updateOwnPass","deleteOwnDb","createDb","results","RegExp","exec","getParameterByName","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.eb9d34a1.chunk.js","sourcesContent":["\r\n\r\nexport default class Config{\r\n\r\n    //Use local development server when running in development mode!\r\n    static ApiPath = (process.env.NODE_ENV ===\"development\") ? \"http://localhost:8080\" : \"\";\r\n    // static ApiPath = \"https://diplomportal.herokuapp.com\"\r\n    static campusNetServiceUrl = \"/rest/cn/login\";\r\n    static TOKEN_NAME  = \"portal-jwt-Token\";\r\n    // ApiPath for same site installation\r\n    //  static ApiPath = \"\";\r\n}","/**\r\n * Created by Christian on 02-05-2017.\r\n */\r\nimport React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Button,\r\n    Col,\r\n    ControlLabel,\r\n    Form,\r\n    FormControl,\r\n    FormGroup,\r\n    Glyphicon,\r\n    MenuItem,\r\n    Modal,\r\n    Nav,\r\n    Navbar,\r\n    NavDropdown,\r\n    NavItem\r\n} from \"react-bootstrap\";\r\nimport Config from \"./config\";\r\nimport {arrayMove, SortableContainer, SortableElement, SortableHandle} from \"react-sortable-hoc\";\r\nimport {styles} from \"./index\";\r\n\r\nexport default class TopMenu extends Component {\r\n    sortEnd = ({oldIndex, newIndex})=>{\r\n        console.log(\"Move from:\" + oldIndex + \" to: \" + newIndex)\r\n        this.props.onLinksUpdated(arrayMove(this.props.links,oldIndex,newIndex))\r\n\r\n    };\r\n    handlenewLinkClicked = ()=>{\r\n        this.setState({showModal:true})\r\n    };\r\n    handlesubmitLink = (e)=>{\r\n        e.preventDefault();\r\n        let links = this.props.links;\r\n        links.push({text:this.state.textInput,href:this.state.hrefInput})\r\n        this.setState({showModal:false, textInput:'', hrefInput:'http://'})\r\n        this.props.onLinksUpdated(links)\r\n    };\r\n    handleLinkRemove = (e)=>{\r\n        console.log(e);\r\n        let links = this.props.links;\r\n        links = links.filter((link)=>{\r\n            console.log(link)\r\n            return !(link.text ===e.text && link.href===e.href)\r\n        })\r\n        this.props.onLinksUpdated(links);\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {active: props.activeId, showModal:false, hrefInput:'http://',textInput:''}\r\n    };\r\n\r\n    handleAvatarClick = (eventKey) => {\r\n\r\n        if(this.props.avatar.id){\r\n            if(eventKey===0.1){\r\n                this.props.onLogout();\r\n            } else {\r\n                console.log(\"editing profile\")\r\n                this.props.onProfileEdit();\r\n            }\r\n        } else {\r\n            //Send User to CampusnetLogin\r\n            const redirectUrl = Config.ApiPath ? Config.ApiPath + Config.campusNetServiceUrl : Config.campusNetServiceUrl;\r\n            window.location.replace(redirectUrl);\r\n        }\r\n    };\r\n\r\n\r\n    handleNavSelect = (eventKey) => {\r\n        this.setState({active: eventKey})\r\n        console.log(\"TopMenu Selection:\" )\r\n        console.log(eventKey)\r\n        this.props.onSelect(eventKey);\r\n    };\r\n\r\n    getUserMenu = (e)=> {\r\n        if (this.props.avatar.id){\r\n            return <NavDropdown id=\"avatarDropDown\" eventKey={0} title={this.props.avatar.id}>\r\n                <NavItem id=\"avatarLogout\" eventKey={0.1}>Logout</NavItem>\r\n                <NavItem id=\"editProfile\" eventKey={0.2}>Profil</NavItem>\r\n            </NavDropdown>\r\n        } else {\r\n            return <NavItem>\r\n                Login\r\n            </NavItem>\r\n        }\r\n    }\r\n\r\n    getNavContent = () => {\r\n        return this.props.menuItems.map((nav, no) => {\r\n            if (nav.type === \"NavText\") {\r\n                return <NavItem key={nav.id} eventKey={nav.id}/>\r\n            } else if (nav.type === \"NavItem\") {\r\n                return <NavItem key={no} eventKey={nav.id}\r\n                                active={this.state.active.component === nav.id.component}>{nav.text}</ NavItem>\r\n            } else if (nav.type === \"NavDropDown\") {\r\n\r\n                nav.items = nav.items.sort(function(a, b){\r\n                    if(a.text < b.text) { return -1; }\r\n                    if(a.text > b.text) { return 1; }\r\n                    return 0;});\r\n                const items = nav.items.map((item, no) => {\r\n                    return (<MenuItem key={no} eventKey={item.id}>{item.text}</MenuItem>)\r\n                });\r\n                return (<NavDropdown key={nav.id} id={nav.id} title={nav.text}>\r\n                    {items}\r\n                </NavDropdown>)\r\n            } else if (nav.type === \"Avatar\") {\r\n                return (<NavItem pullRight={true}>Avatar</NavItem>)\r\n            } else {\r\n                return <></>\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getLinkContent =()=> {\r\n        if (!(this.props.links)) return;\r\n        return this.props.links.map((link)=>{\r\n            return <NavItem style={styles.a} key={link.href} onClick={(e)=>{e.preventDefault(); window.open(link.href)}}>{link.text}</NavItem>\r\n        })\r\n\r\n    }\r\n\r\n\r\n    isAdmin = ()=>{\r\n        if (this.props.user && this.props.course && this.props.course.admins) {\r\n            return this.props.course.admins.includes(this.props.user.id)\r\n\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.isAdmin())\r\n        let isLoggedIn = !!this.props.user;\r\n        return <div className=\"NavbarContainer\">\r\n\r\n            <Navbar className=\"navbar-fixed-top\" fluid>\r\n                <Navbar.Header>\r\n                    <Navbar.Toggle/>\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav onSelect={this.handleNavSelect}>\r\n                        {this.getNavContent()}\r\n\r\n                        {isLoggedIn &&(this.isAdmin() ?\r\n                            <SortableNav helperClass=\"sortableHelper\" useWindowAsScrollContainer={true} useDragHandle={true}\r\n                                         items={this.props.links ? this.props.links : []} onSortEnd={this.sortEnd}\r\n                                         newLink={this.handlenewLinkClicked}\r\n                                         removeLink={this.handleLinkRemove}\r\n                            />\r\n                            :\r\n                            <NavDropdown id=\"Links\" title=\"Links\">\r\n                                {this.getLinkContent()}\r\n\r\n                            </NavDropdown>\r\n                        )}\r\n\r\n\r\n                    </Nav>\r\n\r\n                    <Nav onSelect={this.handleAvatarClick} pullRight>\r\n                        {this.getUserMenu()}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Modal bsSize={\"sm\"} show={this.state.showModal} onHide={()=>this.setState({showModal:false})}>\r\n                <Modal.Header closeButton><h4>Nyt Link</h4></Modal.Header>\r\n                <Modal.Body>\r\n\r\n                    <Form horizontal>\r\n                        <FormGroup controlId=\"formHorizontalEmail\">\r\n                            <Col componentClass={ControlLabel} sm={4}>\r\n                                Tekst\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <FormControl type=\"text\" placeholder=\"tekst\" value={this.state.textInput} onChange={(e)=>this.setState({textInput:e.target.value})}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup controlId=\"formHorizontalPassword\">\r\n                            <Col componentClass={ControlLabel} sm={4}>\r\n                                Url\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                                <FormControl type=\"url\" placeholder=\"http://\" value={this.state.hrefInput} onChange={(e)=>this.setState({hrefInput:e.target.value})}/>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Col smOffset={2} sm={10}>\r\n                                <Button type=\"submit\" onClick={this.handlesubmitLink}>\r\n                                    Gem link\r\n                                </Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nTopMenu.propTypes = {\r\n    onLogout: PropTypes.func,\r\n    onProfileEdit: PropTypes.func,\r\n    onSelect: PropTypes.func,\r\n    onLinksUpdated: PropTypes.func,\r\n    menuItems: PropTypes.array,\r\n    user: PropTypes.any,\r\n    course: PropTypes.any\r\n}\r\n\r\nconst DragHandle = SortableHandle(()=> <span><Glyphicon glyph=\"resize-vertical\"/></span>)\r\n\r\n\r\nconst SortableItem = SortableElement(({value, removeLink}) =>\r\n    <NavItem href={value.href} onClick={(e)=>{e.preventDefault();window.open(value.href)}}><DragHandle/>{value.text} <Glyphicon value={value.href} glyph=\"remove\" onClick={(e)=>{e.stopPropagation();removeLink(value)}}/></NavItem>\r\n);\r\n\r\nconst SortableNav = SortableContainer(({items, newLink, removeLink}) => {\r\n    return (\r\n\r\n        <NavDropdown title=\"Links\" id=\"Links\">\r\n            {items.map((value, index) => (\r\n                <SortableItem key={value.href} index={index} value={value} removeLink={(e)=>removeLink(e)} />\r\n            ))}\r\n            <NavItem onClick={newLink}><Glyphicon glyph=\"plus\"/> nyt link</NavItem>\r\n\r\n        </NavDropdown>\r\n    );\r\n});","/**\r\n * Created by Christian on 30-05-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {OverlayTrigger, ProgressBar, Tooltip} from \"react-bootstrap\";\r\nimport {styles} from \"../index\";\r\n\r\n\r\nexport default class ActivityElementTD extends Component {\r\n    handleActivityElementClick = (e)=>{\r\n\r\n        this.props.handleActivityElementClick(e,this.props.activityElement);\r\n\r\n    };\r\n\r\n    render() {\r\n        if (this.props.activityElement.activityElementType!=='Text') {\r\n            return this.linkElement()\r\n        } else {\r\n            return (<td className=\"td-wrap\">{this.props.activityElement.title}</td>)\r\n        }\r\n    }\r\n\r\n\r\n    linkElement() {\r\n        let now = (Number(this.props.activityElement.progress) * 100).toFixed(0);\r\n        now = +now || 0; //Convert NaN to 0\r\n        let showProgress = this.props.activityElement.subElements.length > 0;\r\n        return (<td className=\"td-wrap\">\r\n            <div style={styles.a} target=\"_blank\" onClick={(e)=>this.handleActivityElementClick(e)} id={this.props.activityElement.id}>\r\n                {this.props.activityElement.title} </div>\r\n            {showProgress &&  <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Viser hvor stor en del af materialet du har læst</Tooltip>}><ProgressBar bsStyle={(now >= 100) ? \"success\": \"info\"}  now={now} label={\r\n                <span style={{color:\"black\"}}>{now}%</span>\r\n            }/></OverlayTrigger>}\r\n        </td>);\r\n    }\r\n\r\n}\r\n\r\nActivityElementTD.propTypes = {\r\n    activityElement: PropTypes.shape({\r\n        activityElementType: PropTypes.oneOf(['Link', 'Native', 'GoogleSheet', 'Text']),\r\n        hyperLink: PropTypes.string,\r\n        text: PropTypes.string,\r\n        handleActivityElementClick: PropTypes.func\r\n    })\r\n}\r\n\r\n","/**\r\n * Created by Christian on 30-05-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActivityElementTD from \"./ActivityElementTD\";\r\n\r\nexport default class ActivityRow extends Component{\r\n    handleActivityElementClick = (e, activityElement)=>{\r\n        this.props.handleActivityElementClick(this.props.activity, activityElement);\r\n    };\r\n\r\n    getActivityElements() {\r\n        return this.props.activity.activityElementList.map((activityElement, index)=>{\r\n            return <ActivityElementTD key={index} activityElement={activityElement} handleActivityElementClick={this.handleActivityElementClick}/>\r\n        })\r\n    }\r\n\r\n    checkIfDone(){\r\n        let done = true;\r\n        this.props.activity.activityElementList.forEach((activityElement)=>{\r\n            if (activityElement.subElements && activityElement.subElements.length>0 && activityElement.progress<1){\r\n                done = false;\r\n            }\r\n        })\r\n        return done;\r\n    }\r\n\r\n    render(){\r\n        const date = new Date(this.props.activity.endDate);\r\n        var dateString = ''\r\n        if (this.props.activity.endDate) {\r\n            dateString = date.getDate();\r\n            dateString += '/' + (date.getMonth() + 1);\r\n            if(date.getUTCHours()!==0 || date.getUTCMinutes()!==0) {\r\n                dateString += ' ' + date.getUTCHours();\r\n                dateString += ':' + (date.getUTCMinutes().toString().length === 1 ? '0' : '');\r\n                dateString += date.getUTCMinutes();\r\n            }\r\n        }\r\n        var className = ''\r\n        if (this.checkIfDone()) {\r\n            className += 'success '\r\n        } else if (date > 0 && date < new Date()) {\r\n            className += 'warning'\r\n        }\r\n        if (this.props.activity.status==='DRAFT'){\r\n            className += 'text-muted ';\r\n        }\r\n        return <tr className={className}>\r\n            <td className=\"td-med\">{this.props.activity.title}</td>\r\n            <td className=\"td-wrap td-wide\">{this.props.activity.description}</td>\r\n            <td>{dateString}</td>\r\n            {this.getActivityElements()}\r\n\r\n        </tr>\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nActivityRow.propTypes = {\r\n    activity : PropTypes.shape({\r\n        title: PropTypes.string,\r\n        endDate: PropTypes.any,\r\n        description: PropTypes.string,\r\n        status: PropTypes.oneOf(['VISIBLE','DRAFT', 'INVISIBLE']),\r\n        activityElementList: PropTypes.array,\r\n        handleActivityElementClick: PropTypes.func\r\n\r\n    })\r\n}\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Table} from \"react-bootstrap\";\r\nimport ActivityRow from \"./ActivityRow\";\r\n//import index from '../index.css'\r\n\r\nexport default class AgendaTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coursePlan: {courseActivityList:[{activityElementList:[]}]},\r\n            loading :\"done\"\r\n        }\r\n    }\r\n\r\n    handleActivityElementClick = (activity, activityElement)=>{\r\n        this.props.handleActivityElementClick(activity, activityElement);\r\n    };\r\n\r\n    getHeaderLine() {\r\n        if (this.props.coursePlan.headers !== null) {\r\n            return <thead><tr>\r\n                {this.props.coursePlan.headers.map((headerTitle, index)=>{\r\n                    return <th key={index}>{headerTitle}</th>\r\n                })}\r\n            </tr>\r\n            </thead>\r\n        } else {\r\n            const activityElementCount = this.props.coursePlan.courseActivityList[0].activityElementList.length;\r\n\r\n            return <thead>\r\n            <tr>\r\n                <th>Aktivitet</th>\r\n                <th>Emner</th>\r\n                <th>Tid</th>\r\n                <th colSpan={activityElementCount}>Materiale</th>\r\n\r\n            </tr>\r\n            </thead>\r\n        }\r\n    }\r\n\r\n\r\n    getActivities() {\r\n        return this.props.coursePlan.courseActivityList.map((activity, index)=>{\r\n            return <ActivityRow key={index} activity={activity} handleActivityElementClick={this.handleActivityElementClick}/>\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (this.props.coursePlan && this.props.coursePlan.headers) {\r\n            return (\r\n                <Table hover>\r\n\r\n                    {this.getHeaderLine()}\r\n                    <tbody>\r\n                    {this.getActivities()}\r\n                    </tbody>\r\n\r\n\r\n                </Table>\r\n            )\r\n        } else {\r\n            return (<Table><tbody><tr><td></td></tr></tbody></Table>)\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nAgendaTable.propTypes = {\r\n    user: PropTypes.string,\r\n    handleActivityElementClick: PropTypes.func\r\n\r\n}\r\nAgendaTable.defaultProps = {}","/**\r\n * Created by Christian on 03-08-2017.\r\n */\r\n\r\nimport React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class CheckboxComp extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            uuid: Math.floor(Math.random()*1000000000)\r\n        }\r\n    }\r\n    handlecheck = (e)=>{\r\n        console.log(\"ChekingBox: \" + !this.props.checked)\r\n        this.props.onCheck(!this.props.checked, this.props.id)\r\n    };\r\n\r\n    render() {\r\n        return <span>\r\n            <input id={this.state.uuid} type=\"checkbox\" checked={this.props.checked} onChange={this.handlecheck}/><label htmlFor={this.state.uuid}> </label>\r\n\r\n        </span>\r\n    }\r\n}\r\n\r\nCheckboxComp.propTypes = {\r\n    checked: PropTypes.bool,\r\n    onCheck: PropTypes.func\r\n}\r\n\r\nCheckboxComp.defaultProps = {\r\n    checked: false,\r\n    onCheck: ()=>{console.log('CheckboxComp: onCheck not set')}\r\n\r\n}\r\n","/**\r\n * Created by Christian on 31-05-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Col, Glyphicon, Grid, ListGroupItem, OverlayTrigger, Row, Tooltip} from \"react-bootstrap\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport CheckboxComp from \"./CheckboxComp\";\r\n\r\nexport default class TextSubElement extends Component{\r\n    handleChange =  (e)=>{\r\n        this.props.onChange(e.target.value, this.props.textBoxId)\r\n};\r\n\r\n    render(){\r\n        return (\r\n            <ListGroupItem>\r\n                <h4 className=\"list-group-item-heading\">\r\n                    <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Afkryds elementet for at markere at det er læst/løst</Tooltip>}><span>\r\n                    <CheckboxComp id={this.props.checkBoxId} checked={this.props.checked} onCheck={this.props.onCheck}/>\r\n                    </span>\r\n                    </OverlayTrigger>\r\n                    {this.props.header}\r\n                </h4>\r\n\r\n                <Grid fluid>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n\r\n                            {this.props.text}\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <h5>\r\n                                <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Tag noter - noterne gemmes automatisk</Tooltip>}><span>\r\n                                    <Glyphicon glyph=\"pencil\"/><b>Noter</b></span></OverlayTrigger>\r\n                            </h5>\r\n                            <ContentEditable style={{borderWidth:1, borderStyle:\"solid\", borderColor:\"lightgrey\"}} html={this.props.notes} onChange={this.handleChange}/>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n}\r\n\r\nTextSubElement.propTypes={\r\n    textBoxId: PropTypes.string,\r\n    notes: PropTypes.string,\r\n    onChange: PropTypes.func\r\n}","/**\r\n * Created by Christian on 31-05-2017.\r\n */\r\nimport React, {Component} from 'react'\r\nimport {Col, Glyphicon, Grid, ListGroupItem, OverlayTrigger, Tooltip} from \"react-bootstrap\";\r\nimport CheckboxComp from \"./CheckboxComp\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {styles} from \"../index\";\r\n\r\nexport default class PopOutLinkSubElement extends Component{\r\n    itemClicked = ()=>{\r\n        window.open(this.props.link)\r\n    };\r\n\r\n    handleChange = (e) =>{\r\n        this.props.onChange(e.target.value, this.props.textBoxId)\r\n    };\r\n\r\n    render(){\r\n        console.log()\r\n        return (<ListGroupItem>\r\n            <h4>\r\n                <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Afkryds elementet for at markere at det er læst/løst</Tooltip>}><span>\r\n                    <CheckboxComp id={this.props.checkBoxId} checked={this.props.checked} onCheck={this.props.onCheck}/></span></OverlayTrigger>\r\n                <div style={styles.a} onClick={this.itemClicked}>{this.props.header} <Glyphicon glyph=\"new-window\" /></div></h4>\r\n\r\n            <Grid fluid>\r\n                <Col sm={8} style={{}}>\r\n\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <h5>\r\n                        <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Tag noter - noterne gemmes automatisk</Tooltip>}><span>\r\n                            <Glyphicon glyph=\"pencil\"/><b>Noter</b></span></OverlayTrigger>\r\n                    </h5>\r\n                    <ContentEditable style={{borderWidth:1, borderStyle:\"solid\", borderColor:\"lightgrey\"}} html={this.props.notes} onChange={this.handleChange}/>\r\n                </Col>\r\n            </Grid>\r\n        </ListGroupItem>)\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Col, Glyphicon, Grid, ListGroupItem, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport CheckboxComp from \"./CheckboxComp\";\r\nimport {styles} from \"../index\";\r\n\r\nexport default class EmbeddedLinkSubelement extends Component {\r\n\r\n\r\n    handleChange = (e) =>{\r\n        this.props.onChange(e.target.value, this.props.textBoxId)\r\n    };\r\n\r\n\r\n    render(){\r\n        return <ListGroupItem>\r\n            <h4 className=\"list-group-item-heading\">\r\n                <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Afkryds elementet for at markere at det er læst/løst</Tooltip>}><span>\r\n                    <CheckboxComp id={this.props.checkBoxId} onCheck={this.props.onCheck} checked={this.props.checked}/></span></OverlayTrigger>\r\n                {this.props.title} <div style={styles.a} href={this.props.link} target=\"_blank\"><span style={{fontSize:'50%'}}>klik for at åbne i et nyt vindue</span> <Glyphicon glyph=\"new-window\" /></div></h4>\r\n\r\n            <Grid fluid style={{minHeight:'400px'}}>\r\n                <Col sm={8} style={{}}>\r\n                    <iframe title={this.props.link} style={{minHeight:'400px',float:'left', width:'100%'}} seamless='seamless' frameBorder={0} src={this.props.link}/>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <h5>\r\n                        <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Tag noter - noterne gemmes automatisk</Tooltip>}><span>\r\n                            <Glyphicon glyph=\"pencil\"/><b>Noter</b></span></OverlayTrigger>\r\n                    </h5>\r\n                    <ContentEditable style={{borderWidth:1, borderStyle:\"solid\", borderColor:\"lightgrey\"}} html={this.props.notes} onChange={this.handleChange}/>\r\n                </Col>\r\n            </Grid>\r\n\r\n        </ListGroupItem>\r\n    }\r\n\r\n}\r\n\r\nEmbeddedLinkSubelement.propTypes= {\r\n    notes: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    link: PropTypes.string,\r\n    onCheck: PropTypes.func\r\n\r\n}\r\n","/**\r\n * Created by Christian on 29-06-2017.\r\n */\r\n\r\nimport React,{Component} from 'react'\r\nimport {Col, Grid, ListGroupItem, Row} from \"react-bootstrap\";\r\nimport ContentEditable from \"react-contenteditable\";\r\n\r\n\r\nexport default class QuizSubElement extends Component{\r\n    render(){\r\n        return(\r\n        <ListGroupItem>\r\n            <h4><input id={\"check\"+this.props.checkBoxId} type=\"checkbox\" defaultChecked={true}/><label htmlFor={\"check\" + this.props.checkBoxId}> </label>\r\n                Quiz</h4>\r\n            <Grid fluid>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        {this.props.text}\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <h4>Noter</h4>\r\n                        <ContentEditable/>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        </ListGroupItem>)\r\n    }\r\n}","/**\r\n * Created by Christian on 29-06-2017.\r\n */\r\nimport React,{Component} from 'react'\r\nimport {Col, Glyphicon, Grid, ListGroupItem, Row} from \"react-bootstrap\";\r\nimport ContentEditable from \"react-contenteditable\";\r\n\r\nexport default class ConceptQuestionSubElement extends Component{\r\n\r\n    render(){\r\n        return<ListGroupItem>\r\n            <h4><input id={\"check\"+this.props.checkBoxId} type=\"checkbox\" defaultChecked={true}/><label htmlFor={\"check\" + this.props.checkBoxId}> </label>\r\n                ConceptQuestion</h4>\r\n            <Grid fluid>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        {this.props.text}\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <h5><Glyphicon glyph=\"pencil\"/><b>Noter</b></h5>\r\n                        <ContentEditable/>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n        </ListGroupItem>\r\n    }\r\n}","/**\r\n * Created by Christian on 23-05-2017.\r\n */\r\nimport React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport AceEditor from \"react-ace\"; //Must be imported before ace-builds\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/theme-eclipse\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/snippets/java\";\r\n\r\n\r\nimport {Button, ButtonGroup, Panel, PanelGroup} from \"react-bootstrap\";\r\nimport update from 'immutability-helper';\r\n\r\nexport default class ProgrammingBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mainClass: \"Main\",\r\n            files: [\r\n                {\r\n                    \"fileName\": \"Main.java\",\r\n                    \"fileContents\": props.code\r\n                }],\r\n            input: [],\r\n            activeFile: 0,\r\n            systemOut: [],\r\n            systemErr: [],\r\n            compiling: false,\r\n            annotations: []\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleCodeChange = (e) => {\r\n        const newContents = e.target.value\r\n        const activeIndex = this.state.activeFile;\r\n        const newState = update(this.state,{files:{[activeIndex]:{fileContents:{$set : newContents}}}});\r\n        this.setState(newState);\r\n\r\n    }\r\n\r\n    handleAceEditorChange = (e) =>{\r\n        const activeIndex = this.state.activeFile;\r\n        const newState = update(this.state,{files:{[activeIndex]:{fileContents:{$set : e}}}});\r\n        this.setState(newState);\r\n    }\r\n    handleRunClick = (e) =>{\r\n        const requestObj = {mainClass:this.state.mainClass,\r\n            files:this.state.files,\r\n            input:this.state.input}\r\n        const requestJSON = JSON.stringify(requestObj);\r\n        var runState = update(this.state,{\r\n            compiling:{$set:true},\r\n            systemOut:{$set:[]},\r\n            systemErr:{$set:[]}\r\n        })\r\n        this.setState(runState)\r\n        fetch(\"https://javacompile.herokuapp.com\",{\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            body: requestJSON,\r\n            headers: new Headers({\r\n                'Content-type': 'application/json'\r\n            })\r\n        }).then((response)=>{\r\n            response.json().then((json)=>{\r\n                console.log(json);\r\n                var runRes = json.runResult;\r\n\r\n\r\n                if (!runRes) {\r\n                    runRes = {systemOut:[\"Compilation Failed\"],\r\n                        systemErr:[\"Compile Error\"]}\r\n                }\r\n                var newState = update(this.state, {\r\n                        compiling: {$set: false},\r\n                        systemOut: {$set: runRes.systemOut},\r\n                        systemErr: {$set: runRes.systemErr},\r\n                        // annotations: {\r\n                        //     $set: [{\r\n                        //         row: 3,\r\n                        //         column: 4,\r\n                        //         text: \"error.message\", // text to show in tooltip\r\n                        //         type: \"error\"\r\n                        //     }\r\n                        //     ]\r\n                        // }\r\n                    }\r\n                );\r\n                this.setState(newState);\r\n            })\r\n        })\r\n    }\r\n\r\n    getSystemOut = ()=>{\r\n        return this.mapLines(this.state.systemOut);\r\n    }\r\n    getSystemErr = ()=>{\r\n        debugger;\r\n        return this.mapLines(this.state.systemErr);\r\n    }\r\n\r\n    mapLines = (array) => {\r\n        if (array==null) return ('');\r\n        return array.map((line, key) => {\r\n            return <span key={key}>{line}<br/></span>\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>\r\n                    Kode-Editor\r\n                </h4>\r\n                <AceEditor\r\n                    mode=\"java\"\r\n                    theme=\"eclipse\"\r\n                    name=\"testBox\"\r\n                    height=\"15em\"\r\n                    value={this.state.files[this.state.activeFile].fileContents}\r\n                    onChange={this.handleAceEditorChange}\r\n                    setOptions={{\r\n                        enableBasicAutocompletion: true,\r\n                        enableLiveAutocompletion: true,\r\n                        enableSnippets: true,\r\n                        showLineNumbers: true,\r\n                        tabSize: 2,\r\n                    }}\r\n                    annotations = {this.state.annotations}\r\n\r\n                />\r\n\r\n\r\n                {/*/>*/}\r\n\r\n                <ButtonGroup>\r\n                    <Button onClick={this.handleRunClick} className={this.state.compiling ? \"disabled\" : \"\"}>\r\n                        {this.state.compiling ? \"Running Code...\":\"Run Code!\"}\r\n                    </Button>\r\n                </ButtonGroup>\r\n                <PanelGroup>\r\n                    <Panel header=\"System.Out\" style={{height:200, overflowY:'scroll',fontFamily:\"monospace\"}}>{this.getSystemOut()}</Panel>\r\n                    <Panel header=\"System.Err\" style={{height:200, overflowY:'scroll', color:\"red\", fontFamily:\"monospace\"}}>{this.getSystemErr()}</Panel>\r\n\r\n                </PanelGroup>\r\n            </div>)\r\n\r\n    }\r\n\r\n}\r\n\r\nProgrammingBox.propTypes={\r\n    code:PropTypes.string.isRequired\r\n}\r\n\r\n","/**\r\n * Created by Christian on 14-08-2017.\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Col, Glyphicon, Grid, ListGroupItem, OverlayTrigger, Row, Tooltip} from \"react-bootstrap\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport CheckboxComp from \"./CheckboxComp\";\r\nimport ProgrammingBox from \"./ProgrammingBox\";\r\n\r\nexport default class ProgrammingSubElement extends Component{\r\n    handleChange =  (e)=>{\r\n        this.props.onChange(e.target.value, this.props.textBoxId)\r\n    };\r\n\r\n\r\n    render(){\r\n        return (\r\n            <ListGroupItem>\r\n                <h4 className=\"list-group-item-heading\">\r\n                    <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Afkryds elementet for at markere at det er læst/løst</Tooltip>}><span>\r\n                        <CheckboxComp id={this.props.checkBoxId} checked={this.props.checked} onCheck={this.props.onCheck}/></span></OverlayTrigger>\r\n                    {this.props.header}\r\n                </h4>\r\n\r\n                <Grid fluid>\r\n                    <Row>\r\n                        <Col sm={8}>\r\n                            <ProgrammingBox code={this.props.code} compileUrl={this.props.compileUrl}/>\r\n\r\n                        </Col>\r\n                        <Col sm={4}>\r\n                            <h5>\r\n                                <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Tag noter - noterne gemmes automatisk</Tooltip>}><span>\r\n                                    <Glyphicon glyph=\"pencil\"/><b>Noter</b></span></OverlayTrigger>\r\n                            </h5>\r\n                            <ContentEditable style={{borderWidth:1, borderStyle:\"solid\", borderColor:\"lightgrey\"}} html={this.props.notes} onChange={this.handleChange}/>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Grid>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n}\r\n\r\nProgrammingSubElement.propTypes={\r\n    header: PropTypes.string,\r\n    checkBoxId:PropTypes.string,\r\n    onCheck:PropTypes.func,\r\n    textBoxId: PropTypes.string,\r\n    notes: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    compileUrl: PropTypes.string\r\n}","/**\r\n * Created by Christian on 30-05-2017.\r\n */\r\nimport React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Col, ListGroup, ListGroupItem, Modal, OverlayTrigger, ProgressBar, Row, Tooltip, Well} from \"react-bootstrap\";\r\nimport TextSubElement from \"./TextSubElement\";\r\nimport PopOutLinkSubElement from \"./PopOutLinkSubElement\";\r\nimport EmbeddedLinkSubElement from \"./EmbeddedLinkSubelement\";\r\nimport QuizSubElement from \"./QuizSubElement\";\r\nimport ConceptQuestionSubElement from \"./ConceptQuestionSubElement\";\r\nimport \"../index.css\";\r\nimport CheckboxComp from \"./CheckboxComp\";\r\nimport ProgrammingSubElement from \"./ProgrammingSubElement\";\r\n\r\nexport default class ActivityElementModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            html:\"noter\"\r\n        }\r\n    }\r\n\r\n    getSubElementBoxes = () => {\r\n        if (this.props.subElements) {\r\n            return this.props.subElements.map((subElement, index) => {\r\n                if (subElement.subElementType === 'Text') {\r\n                    return <TextSubElement key={index} header={subElement.title} text={subElement.content}\r\n                                           checkBoxId={subElement.id} onCheck={this.handleCheck} checked={subElement.checked}\r\n                                           textBoxId={subElement.id} onChange={this.handleTextBoxChange} notes={subElement.notes}\r\n                    />\r\n                } else if (subElement.subElementType === 'Pop_Out_Link') {\r\n                    return <PopOutLinkSubElement key={index} checkBoxId={subElement.id} checked={subElement.checked} onCheck={this.handleCheck}\r\n                                                 header={subElement.title} link={subElement.hyperLink}\r\n                                                 textBoxId={subElement.id} onChange={this.handleTextBoxChange} notes={subElement.notes}\r\n                    />\r\n                } else if (subElement.subElementType === 'Code') {\r\n                    //TODO move to containerElement\r\n                    return <ProgrammingSubElement key={index} checkBoxId={subElement.id} checked={subElement.checked} onCheck={this.handleCheck}\r\n                                                  header={subElement.title}\r\n                                                  code={subElement.content}\r\n                                                  textBoxId={subElement.id} onChange={this.handleTextBoxChange} notes={subElement.notes}\r\n                    />\r\n                } else if (subElement.subElementType === 'Embedded_Link'){\r\n                    return <EmbeddedLinkSubElement key={index} title={subElement.title}\r\n                                                   checkBoxId={subElement.id} checked={subElement.checked} onCheck={this.handleCheck}\r\n                                                   link={subElement.hyperLink}\r\n                                                   textBoxId={subElement.id} onChange={this.handleTextBoxChange} notes={subElement.notes}\r\n                    />\r\n                } else if (subElement.subElementType === 'Concept_Question') {\r\n                    return <ConceptQuestionSubElement checkBoxId={subElement.id}/>\r\n                } else if(subElement.subElementType==='Quiz') {\r\n                    return <QuizSubElement checkBoxId={subElement.id}/>\r\n                } else { //placeholder for now...\r\n                    return <ListGroupItem key={index} header={subElement.title}>Coming Sooon!</ListGroupItem>\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    getMenuElements = () => {\r\n        if (this.props.subElements) {\r\n            return this.props.subElements.map((subelement, index)=>{\r\n                return <li key={index}>\r\n\r\n\r\n                    <OverlayTrigger placement={'bottom'} overlay={<Tooltip>Afkryds elementet for at markere at det er læst/løst</Tooltip>}>\r\n                        <span><CheckboxComp id={subelement.id} checked={subelement.checked} onCheck={(checked, id)=>this.handleCheck(checked, id)}/></span></OverlayTrigger>{subelement.title}</li>\r\n            })\r\n        }\r\n    }\r\n\r\n    scrollToTop = () =>{\r\n        window.scrollTo(0,0);\r\n    };\r\n\r\n    hideModal = () =>{\r\n        this.props.hideModal();\r\n    }\r\n\r\n    handleCheck = (checked, id) => {\r\n        this.props.handleSubElementCheck(checked, id)\r\n    };\r\n\r\n    handleTextBoxChange = (text, id)=>{\r\n        this.props.handleNotes(text,id);\r\n    };\r\n\r\n\r\n    calculateProgress =() =>{\r\n        var finished = 0.0;\r\n        if (this.props.subElements && Array.isArray(this.props.subElements)) {\r\n            this.props.subElements.forEach((element) => {\r\n                if (element.checked===true)finished++;\r\n            })\r\n            return ((finished / this.props.subElements.length ) * 100).toFixed(0)\r\n        } else {\r\n            return 1\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let now = this.calculateProgress();\r\n        return (\r\n            <Modal bsSize=\"large\" dialogClassName=\"custom-modal\" show={this.props.showModal} onHide={this.hideModal} contentLabel=\"\">\r\n                <Modal.Header closeButton><h3 style={{margin:-5}}>{this.props.title}</h3></Modal.Header>\r\n\r\n\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col md={3} sm={4}>\r\n                            <Well style={{cursor: 'pointer', paddingLeft:0,paddingRight:0}}>\r\n                                <ul>\r\n                                    {this.getMenuElements()}\r\n                                </ul>\r\n                                <OverlayTrigger placement={'bottom'} overlay={<Tooltip id={this.props.id}>Viser hvor stor en del af materialet du har læst</Tooltip>}><ProgressBar bsStyle={(now >= 100) ? \"success\": \"info\"}  now={now} label={\r\n\r\n                                    <span style={{color:\"black\"}}>{now}%</span>\r\n                                }/></OverlayTrigger>\r\n                            </Well>\r\n                        </Col>\r\n                        {/*Container for contents*/}\r\n                        <Col md={9} sm={8}>\r\n                            <div className=\"scroll-div\">\r\n                                <ListGroup>\r\n                                    {this.getSubElementBoxes()}\r\n                                </ListGroup>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nActivityElementModal.propTypes = {\r\n    subElements: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            content: PropTypes.string,\r\n            googleSheetId: PropTypes.string,\r\n            hyperLink: PropTypes.string,\r\n            id: PropTypes.string,\r\n            subElementType: PropTypes.oneOf(['Text', 'Embedded_Link', 'Pop_Out_Link', 'Code', 'Quiz', 'Concept_Question'])\r\n        })),\r\n    handleSubElementCheck: PropTypes.func,\r\n    handleNotes: PropTypes.func\r\n}","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {Col, Grid, Row} from \"react-bootstrap\";\r\nimport AgendaTable from \"./components/AgendaTable\";\r\nimport ripple from './ripple.svg';\r\nimport ActivityElementModal from \"./components/ActivityElementModal\";\r\n\r\nexport default class Agenda extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        //Set initialState\r\n        this.state = {\r\n            showModal: false,\r\n            linksUrl: this.props.apiUrl + this.props.linksPath,\r\n            activityElementUrl: this.props.apiUrl + this.props.activityElementsPath,\r\n            activitySubElements: [],\r\n            activeActivityElement: \"\"\r\n        }\r\n\r\n    }\r\n\r\n    handleActivityClick = (activity, activityElement) => {\r\n        this.props.handleActivityClick(activity,activityElement);\r\n\r\n    };\r\n\r\n    hideModal = (e) =>{\r\n        this.props.hideModal();\r\n    };\r\n\r\n    handleSubElementCheck = (checked, id)=>{\r\n        this.props.handleSubElementCheck(checked, this.props.activeActivityId, this.props.activeActivityElementId, id);\r\n    }\r\n\r\n    handleNotes = (text, id)=>{\r\n        this.props.handleSubElementNotes(text, this.props.activeActivityId, this.props.activeActivityElementId, id);\r\n    }\r\n\r\n//view\r\n    render() {\r\n        //TODO: fremmøderegistrering\r\n        // let courseAdmin = false;\r\n        // if (this.props.course.admins && this.props.user && this.props.user.id){\r\n        //    this.props.course.admins.forEach((adminId)=>{\r\n        //        courseAdmin = (adminId===this.props.user.id);\r\n        //    })\r\n        // }\r\n        return (\r\n            <Grid>\r\n                {this.props.coursePlanLoading===true && <div>Loading courseplan... <img src={ripple} alt=\"...\"/></div>}\r\n                {this.props.coursePlanLoading===\"failed\" && <div>Kursusplanen kunne ikke indlæses</div>}\r\n                <Row>\r\n                    <Col>\r\n                        <AgendaTable coursePlan={this.props.coursePlan}\r\n                                     handleActivityElementClick={this.handleActivityClick}/>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                        <ActivityElementModal hideModal={this.hideModal} showModal={this.props.showModal}\r\n                                              className=\"scroll-div\" ref=\"activityContainer\" title={this.props.activeActivityElement}\r\n                                              handleSubElementCheck={this.handleSubElementCheck}\r\n                                              handleNotes={this.handleNotes}\r\n                                              subElements={this.props.activitySubElements}/>\r\n\r\n\r\n\r\n            </Grid>)\r\n\r\n    }\r\n\r\n}\r\nAgenda.propTypes = {\r\n    apiUrl: PropTypes.string,\r\n    linksPath: PropTypes.string,\r\n    generalLinksTitle: PropTypes.string,\r\n    courseLinksTitle: PropTypes.string,\r\n    courseplansPath: PropTypes.string,\r\n    activityElementsPath: PropTypes.string,\r\n    googlepath: PropTypes.string,\r\n    user: PropTypes.string,\r\n    coursePlan: PropTypes.any,\r\n    activeActivityElement: PropTypes.any,\r\n    course: PropTypes.shape({\r\n        id: PropTypes.string,\r\n        text: PropTypes.string,\r\n        coursePlanId: PropTypes.string,\r\n        coursePlanSource: PropTypes.oneOf(['GoogleSheet', 'Mongo'])\r\n    }).isRequired,\r\n    handleActivityClick: PropTypes.func,\r\n    handleSubElementCheck: PropTypes.func,\r\n    handleSubElementNotes: PropTypes.func,\r\n    hideModal: PropTypes.func\r\n}\r\n\r\nAgenda.defaultProps = {\r\n    apiUrl: '',\r\n    user: null,\r\n    linksPath: '/links',\r\n    courseplansPath: '/courseplans',\r\n    activityElementsPath: '/activityelements',\r\n    googlepath: '/google',\r\n    generalLinksTitle: 'Fælles links',\r\n    courseLinksTitle: 'Kursus links'\r\n\r\n}","/**\r\n * Created by Christian on 09-05-2017.\r\n */\r\n\r\nimport Config from './config';\r\n\r\nexport default class JwtHandler {\r\n    static getUser = () => {\r\n        var token = JwtHandler.getToken();\r\n        console.log(token);\r\n        if (!token) {return null}\r\n        else {\r\n            const claims = token.split(\".\")[1];\r\n            const decodedClams = decodeURIComponent(encodeURI(window.atob(claims)));\r\n            const jsonClaims = JSON.parse(decodedClams);\r\n            console.log(\"found claims:\");\r\n            console.log(jsonClaims);\r\n            return jsonClaims.user;\r\n        }\r\n    }\r\n    static getToken = () =>{\r\n        return localStorage.getItem(Config.TOKEN_NAME);\r\n    }\r\n    static setToken = (token) =>{\r\n\r\n        localStorage.setItem(Config.TOKEN_NAME,token);\r\n    }\r\n    static clearUser = () => {\r\n        localStorage.removeItem(Config.TOKEN_NAME);\r\n    }\r\n\r\n}","/**\r\n * Created by Christian on 07-04-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Grid, Button} from 'react-bootstrap';\r\nimport Config from './config'\r\n\r\nclass LoginPage extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    cnLogin = () =>{\r\n        const redirectUrl = Config.ApiPath ? Config.ApiPath + Config.campusNetServiceUrl : Config.campusNetServiceUrl;\r\n        window.location.replace(redirectUrl);\r\n    }\r\n    render(){\r\n        return <Grid>\r\n            <Row>\r\n                <Col xsOffset={3} xs={6} className=\"text-center\">\r\n                    <Button bsStyle=\"primary\" onClick={this.cnLogin}> Login with campusNet</Button>\r\n                </Col>\r\n            </Row>\r\n        </Grid>\r\n    }\r\n}\r\nexport default LoginPage;","/**\r\n * Created by Christian on 31-07-2017.\r\n */\r\nimport React, {Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Glyphicon, Grid, Well} from \"react-bootstrap\";\r\nimport ContentEditable from \"react-contenteditable\";\r\nimport {styles} from \"./index\";\r\n\r\nexport default class CourseInfoPage extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let content = props.content;\r\n        if (content===null || content===undefined)\r\n            content=[];\r\n        content = JSON.parse(JSON.stringify(content)); //Deep clone - most efficient way\r\n        this.state = {\r\n            content: content\r\n        }\r\n    }\r\n    updateLine = (event,index)=>{\r\n        console.log(event.target.value);\r\n        console.log(index);\r\n        let newContents = this.state.content;\r\n        newContents[index] = {title:this.state.content[index].title, content:event.target.value};\r\n        console.log(newContents);\r\n        this.setState({content: newContents});\r\n        // this.props.updateCourseInfo(newContents)\r\n    }\r\n\r\n\r\n    updateTitle = (event, index) =>{\r\n        let newContents = this.state.content;\r\n        newContents[index] = {title:event.target.value, content: this.state.content[index].content};\r\n        this.setState({content:newContents});\r\n    }\r\n\r\n    addLine = ()=>{\r\n        let content = this.state.content;\r\n        content.push({title:\"titel\", content:\"indhold\"})\r\n        this.setState({conent:content})\r\n    };\r\n\r\n\r\n    deleteLine =(index)=> {\r\n        let content = this.state.content;\r\n        console.log(\"index\" + index);\r\n        console.log(content);\r\n        content.splice(index,1);\r\n        console.log(content);\r\n        this.setState({content:content});\r\n\r\n    }\r\n\r\n    cancelChange = ()=>{\r\n        this.setState({content:JSON.parse(JSON.stringify(this.props.content))})\r\n    };\r\n\r\n    saveLines = ()=>{\r\n        this.props.saveContent(this.state.content);\r\n    };\r\n\r\n    isAdmin = ()=>{\r\n        if (this.props.user && this.props.course && this.props.course.admins) {\r\n            return this.props.course.admins.includes(this.props.user.id)\r\n        }else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    generateEditableList = ()=>{\r\n\r\n        var content =  (<dl className=\"dl-horizontal\">\r\n            {this.state.content.map((info, index)=>{\r\n                return <span key={index}>\r\n                    <dt><div style={styles.a} onClick={()=>this.deleteLine(index)}><Glyphicon glyph=\"remove\" style={{float:\"left\"}}/></div><ContentEditable style={{float:\"right\"}}id={index} html={info.title} onChange={(event) => this.updateTitle(event, index)}/></dt>\r\n                    <dd><ContentEditable id={index} html={info.content} onChange={(event)=>this.updateLine(event,index)}/> </dd>\r\n                </span>\r\n            })\r\n            }\r\n            <div style={styles.a}> <Glyphicon glyph=\"plus\"/></div>\r\n        </dl>)\r\n        return content;\r\n\r\n\r\n    }\r\n    generateList = ()=>{\r\n\r\n        var content =  (<dl className=\"dl-horizontal\">\r\n            {this.state.content.map((info, index)=>{\r\n                return <span key={index}>\r\n                    <dt>{info.title}</dt>\r\n                    <dd dangerouslySetInnerHTML={{__html:info.content}}/>\r\n                </span>\r\n            })\r\n            }\r\n        </dl>)\r\n        return content;\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        return <Grid>\r\n            <Well>\r\n                <h4>Kursusinformation</h4>\r\n                <hr/>\r\n                {this.isAdmin() ?\r\n                    this.generateEditableList() :\r\n                    this.generateList()}\r\n                {this.isAdmin() &&<span>\r\n                <Button bsStyle={\"primary\"} onClick={this.saveLines}>Gem\r\n                </Button>\r\n                    < Button onClick={this.cancelChange}>Annullér</Button>\r\n                </span>\r\n                }\r\n            </Well>\r\n        </Grid>\r\n\r\n    }\r\n\r\n}\r\nCourseInfoPage.propTypes = {\r\n    content: PropTypes.arrayOf(PropTypes.shape({\r\n            title: PropTypes.string,\r\n            content: PropTypes.string,\r\n            saveContent: PropTypes.func,\r\n            user: PropTypes.any\r\n        }\r\n    ))\r\n}","/**\r\n * Created by Christian on 01-08-2017.\r\n */\r\nimport React, {Component} from 'react'\r\n\r\nexport default class SyllabusPage extends Component {\r\n\r\n    render(){\r\n        return <div> SyllabusPage - Coming soon</div>\r\n    }\r\n}","/**\r\n * Created by Christian on 01-08-2017.\r\n */\r\n\r\nimport React, {Component} from 'react'\r\n\r\nexport default class ForumPage extends Component {\r\n\r\n    render(){\r\n        return <div>ForumPage</div>\r\n    }\r\n}","/**\r\n * Created by Christian on 01-08-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Glyphicon, Panel} from \"react-bootstrap\";\r\nimport ripple from '../ripple.svg'\r\nimport {styles} from \"../index\";\r\n\r\nexport default class CourseAdminMenu extends Component{\r\n    handleCourseSelection= (courseId)=>{\r\n        this.props.courseClicked(courseId)\r\n    };\r\n\r\n    handleNewCourseClick= ()=>{\r\n        this.props.newCourseClicked();\r\n    }\r\n\r\n    generateCourseList(){\r\n        if (this.props.loading===true) {\r\n            return <img alt=\"loading\" src={ripple}/>\r\n        } else {\r\n            return <ul>\r\n                {this.props.courseList.map((course) => {\r\n                    return <li key={course.id}><div style={styles.a}\r\n                        onClick={() => this.handleCourseSelection(course.id)}>{course.courseShortHand} - {course.courseName}</div>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            <Panel>\r\n                <div className=\"panel-title\">Kursus Administration</div>\r\n                <div className=\"panel-body\">\r\n                    {this.generateCourseList()}\r\n\r\n                    {this.props.createCourses && <div style={styles.a} onClick={this.handleNewCourseClick}><Glyphicon glyph=\"plus\"/> Nyt kursus</div>}\r\n                </div>\r\n            </Panel>\r\n        </div>\r\n    }\r\n}\r\n\r\nCourseAdminMenu.propTypes = {\r\n    courseList: PropTypes.array,\r\n    courseClicked: PropTypes.func,\r\n    newCourseClicked: PropTypes.func,\r\n    createCourses: PropTypes.bool,\r\n    loading: PropTypes.any\r\n}\r\n\r\nCourseAdminMenu.defaultProps = {\r\n    courseList: []\r\n}","/**\r\n * Created by Christian on 29-05-2017.\r\n */\r\nimport 'whatwg-fetch';\r\nimport JwtHandler from '../jwthandler'\r\n\r\nconst debug = true;\r\nexport default class Rip {\r\n\r\n    static getJson = (url, callback, catchback) => {\r\n        if (debug) console.log(\"Rip: Fetching from \" + url);\r\n        const jwtToken = JwtHandler.getToken();\r\n        fetch(url, {\r\n            mode: 'cors',\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                \"content-type\": \"application/json\",\r\n                \"authorization\" : \"Bearer \" + jwtToken\r\n            })\r\n        }).then((response) => {\r\n            if(response.status!==200){\r\n                catchback(response)\r\n            } else {\r\n                Rip.handleJSON(response, callback, catchback);\r\n            }\r\n        }).catch((response) => {\r\n            catchback({message: \"Rip: Error while fetching: \" + response.message, response: response});\r\n        })\r\n    }\r\n\r\n    static getPlain = (url, callback,catchback) => {\r\n        fetch(url,{\r\n            mode: 'cors',\r\n            method: 'GET'\r\n        }).then((response)=>{\r\n            console.log('got response');\r\n            response.text().then((text) =>{\r\n                if(response.status!==200 && response.status!==204 && response.status!==201){\r\n                    catchback({message:\"Rip: Error while GET'ing: \" + text, response: response})\r\n                }\r\n                callback(text);\r\n            })\r\n        }).catch((response)=>{\r\n            catchback({message:\"Rip: Error while GET'ing \" + response.message, response: response});\r\n        })\r\n    }\r\n\r\n    static getNoCors = (url) =>{\r\n        fetch(url,{\r\n            mode: 'no-cors',\r\n            method: 'GET'\r\n        })\r\n    }\r\n\r\n    static post = (url, json, callback, catchback) => {\r\n        const token = JwtHandler.getToken();\r\n        fetch(url, {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            body: JSON.stringify(json),\r\n            headers: new Headers({\r\n                'Content-type' : 'application/json',\r\n                'authorization' : 'Bearer ' + token\r\n            })\r\n        }).then((response) => {\r\n            if (response.status!==200 && response.status!==201 && response.status!==204){\r\n                if (response.status===403 ){\r\n                    response.text().then((text)=>{\r\n                        if (text===\"Token too old!\"){\r\n                            alert(\"Dit login er udløbet - Du må logge ind igen\")\r\n                        }\r\n                    })\r\n                }\r\n                catchback({message:\"Rip: Error while POST'ing: \" + response.message, response: response})\r\n            }\r\n            Rip.handleJSON(response,callback,catchback);\r\n        }).catch((response) => {\r\n            catchback({message: \"Rip: Error while POST'ing: \" + response.message, response: response});\r\n        })\r\n    }\r\n\r\n    static put = (url, json, callback, catchback) => {\r\n        const token = JwtHandler.getToken();\r\n        fetch(url, {\r\n            mode: 'cors',\r\n            method: 'PUT',\r\n            body: JSON.stringify(json),\r\n            headers: new Headers({\r\n                'Content-type' : 'application/json',\r\n                'authorization' : 'Bearer ' + token\r\n            })\r\n        }).then((response) => {\r\n            console.log(response.status)\r\n            if (response.status!==200 && response.status!==201 && response.status!==204){\r\n                catchback({message:\"Rip: Error while PUT'ing: \" + response.message, response: response})\r\n            }\r\n            Rip.handleJSON(response,callback,catchback);\r\n        }).catch((response) => {\r\n            console.log(response)\r\n            catchback({message: \"Rip: Error while PUT'ing: \" + response.message, response: response});\r\n        })\r\n    }\r\n\r\n    static postForString = (url,json,callback, catchback)=>{\r\n        const token = JwtHandler.getToken();\r\n        fetch(url, {\r\n            mode: 'cors',\r\n            method: 'POST',\r\n            body: JSON.stringify(json),\r\n            headers: new Headers({\r\n                'Content-type' : 'application/json',\r\n                'authorization' : 'Bearer ' + token\r\n            })\r\n        }).then((response) => {\r\n            if(response.status === 200 || response.status === 204 || response.status ===201) {\r\n                callback({message: \"Rip: OK while POST'ing: \" + response.message, response: response});\r\n            } else {\r\n                catchback({message: \"Rip: Error while POST'ing: \" + response.message, response: response});\r\n            }\r\n        }).catch((response) => {\r\n            catchback({message: \"Rip: Error while POST'ing: \" + response.message, response: response});\r\n        })\r\n    }\r\n\r\n    static del = (url,callback, catchback) =>{\r\n        const token = JwtHandler.getToken();\r\n        fetch(url, {\r\n            mode: 'cors',\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-type' : 'application/json',\r\n                'authorization' : 'Bearer ' + token\r\n            })\r\n        }).then((response) => {\r\n            if(response.status === 200 || response.status === 204 || response.status ===201) {\r\n                callback({message: \"Rip: OK DELETING: \" + response.message, response: response});\r\n            } else {\r\n                catchback({message: \"Rip: Error while DELETING'ing: \" + response.message, response: response});\r\n            }\r\n        }).catch((response) => {\r\n            catchback({message: \"Rip: Error while POST'ing: \" + response.message, response: response});\r\n        })\r\n\r\n    }\r\n\r\n    static handleJSON = (response,callback,catchback)=>{\r\n        if (!response.ok) {\r\n            const ripError = {message: \"Rip: Response not ok \" + response.error, response: response}\r\n            if (debug) console.log(ripError);\r\n            catchback(ripError);\r\n        }\r\n        response.json().then((json) => {\r\n            callback(json);\r\n        }).catch((error) => {\r\n            const riperror = {message: \"Rip: error while parsing json: \" + error, response: response};\r\n            if (debug) console.log(riperror);\r\n            catchback(riperror);\r\n        })\r\n    }\r\n\r\n    static getOwnDb = (apiURL, userName,callback, catchback) =>{\r\n        Rip.getJson(apiURL + \"/database/self\",(json)=>{\r\n            callback(json);\r\n        }, catchback)\r\n\r\n    }\r\n\r\n    static deleteOwnDb(apiUrL, userName, callback, catchback) {\r\n        Rip.del(apiUrL + \"/database/self\", callback, catchback\r\n        )\r\n    }\r\n\r\n    static createOwnDb(apiUrL, userName, callback, catchback) {\r\n        Rip.post(apiUrL + \"/database/self\", callback , catchback)\r\n    }\r\n\r\n    static updateOwnPass(apiUrL, userName, callback, catchback) {\r\n        Rip.post(apiUrL + \"/database/self/pass\",callback,catchback)\r\n    }\r\n}","/**\r\n * Created by Christian on 05-08-2017.\r\n */\r\nimport React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Glyphicon} from \"react-bootstrap\";\r\nimport {styles} from \"../index\";\r\n\r\nexport default class EditableHeadLine extends Component{\r\n    handleGlyphClick(event){\r\n        let editmode = !this.state.editmode\r\n        this.setState({editmode:editmode, courseName:this.props.courseName, shortHand: this.props.shortHand})\r\n    };\r\n\r\n    handleGlyphOkClick(event){\r\n        this.props.newInput(this.state.shortHand, this.state.courseName)\r\n        this.setState({editmode:false})\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            editmode:false,\r\n            courseName: '',\r\n            shortHand: ''\r\n        }\r\n    }\r\n\r\n    handleShortHandChange(e) {\r\n        this.setState({\r\n            shortHand: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleCourseNameChage(e) {\r\n        this.setState({\r\n            courseName: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.editmode){\r\n            return <h3>\r\n                <input type=\"text\" value={this.state.shortHand} onChange={(e)=>this.handleShortHandChange(e)}/> -\r\n                <input type=\"text\" value={this.state.courseName} onChange={(e)=>this.handleCourseNameChage(e)}/>\r\n                <div style={styles.a} onClick={(e)=>{this.handleGlyphOkClick(e)}}><Glyphicon glyph=\"ok\" /></div>\r\n                <div style={styles.a} onClick={(e)=>{this.handleGlyphClick(e)}}><Glyphicon glyph=\"remove\"/></div>\r\n            </h3>\r\n        } else {\r\n            return <h3><span>{this.props.shortHand}</span> - <span>{this.props.courseName} </span><div style={styles.a} onClick={(e)=>{this.handleGlyphClick(e)}}><Glyphicon glyph=\"pencil\"/></div></h3>\r\n                }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nEditableHeadLine.propTypes = {\r\n    shortHand: PropTypes.string,\r\n    courseName: PropTypes.string,\r\n    newInput: PropTypes.func\r\n}\r\n","/**\r\n * Created by Christian on 06-08-2017.\r\n */\r\n/**\r\n * Created by Christian on 05-08-2017.\r\n */\r\nimport React,{Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Glyphicon} from \"react-bootstrap\";\r\nimport {styles} from \"../index\";\r\n\r\nexport default class EditableHeadLine extends Component{\r\n    handleGlyphClick(event){\r\n        let editmode = !this.state.editmode;\r\n        this.setState({editmode:editmode, text:this.props.text})\r\n    };\r\n\r\n    handleGlyphOkClick(event){\r\n        this.props.newInput(this.state.text);\r\n        this.setState({editmode:false})\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            editmode:false,\r\n            text: '',\r\n        }\r\n    }\r\n\r\n    handleTextChage(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if(this.state.editmode){\r\n            return <span>\r\n                <input type=\"text\" value={this.state.text} onChange={(e)=>this.handleTextChage(e)}/>\r\n                <div style={styles.a} onClick={(e)=>{this.handleGlyphOkClick(e)}}><Glyphicon glyph=\"ok\" /></div>\r\n                <div style={styles.a} onClick={(e)=>{this.handleGlyphClick(e)}}><Glyphicon glyph=\"remove\"/></div>\r\n            </span>\r\n        } else {\r\n            return <span><span>{this.props.text} </span><div style={styles.a} onClick={(e)=>{this.handleGlyphClick(e)}}><Glyphicon glyph=\"pencil\"/></div></span>\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nEditableHeadLine.propTypes = {\r\n    text: PropTypes.string,\r\n    newInput: PropTypes.func\r\n}\r\n","/**\r\n * Created by Christian on 01-08-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Button, ControlLabel, Form, FormControl, FormGroup, HelpBlock, Panel,\r\n    Table\r\n} from \"react-bootstrap\";\r\nimport CheckboxComp from \"./CheckboxComp\";\r\nimport EditableHeadLine from \"./EditableHeadLine\";\r\nimport EditableText from \"./EditableText\";\r\nimport ripple from '../ripple.svg'\r\n\r\nexport default class CourseAdminMain extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            csv: '',\r\n            sheetBox: ''\r\n        }\r\n\r\n    }\r\n    handlesheetBoxChange= (event)=>{\r\n        this.setState({sheetBox:event.target.value})\r\n    }\r\n\r\n    handleUsesGoogleSheet = (checked) =>{\r\n        this.props.usesGoogleSheet(checked);\r\n    };\r\n\r\n    handleCSVChange = (e)=>{\r\n    this.setState({csv: e.target.value\r\n        })\r\n    }\r\n\r\n    handleCSVSubmit = (e)=>{\r\n        e.preventDefault();\r\n        this.props.newUserCSVSubmitted(this.state.csv)\r\n        this.setState({\r\n            csv: ''\r\n        });\r\n}\r\n    newShortAndTitle = (short, name)=>{\r\n        console.log('got new short and title:')\r\n        console.log(short + name)\r\n        this.props.newShortAndTitle(short, name);\r\n    };\r\n\r\n    newGoogleSheetId = (id)=>{\r\n        this.props.newGoogleSheetId(id);\r\n    };\r\n\r\n    generateUsertableBody(){\r\n        if (this.props.users ==null) return <tr/> //Intentional type coersion from null to string\r\n        let contents =\r\n        this.props.users.map((user)=>{\r\n            return <tr key={user.id}>\r\n                <td>{user.userName}</td>\r\n                <td>{user.firstName} {user.lastName}</td>\r\n                <td>{user.email}</td>\r\n                <td><CheckboxComp checked={user.admin} id={user.id} onCheck={(value, id)=>this.props.roleChecked(id,'admin', value)}/></td>\r\n                <td><CheckboxComp checked={user.ta} id={user.id} onCheck={(value, id)=>this.props.roleChecked(id,'ta', value)}/></td>\r\n                <td><CheckboxComp checked={user.student} id={user.id} onCheck={(value, id)=>this.props.roleChecked(id,'student', value)}/></td>\r\n            </tr>\r\n        })\r\n        return contents;\r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.loading===\"failed\")\r\n            return (<div>Load failed</div>)\r\n        else {\r\n            let shortHand = 'Indtast Kursus ID'\r\n            if (this.props.course && this.props.course.courseShortHand!==null) {\r\n                shortHand = this.props.course.courseShortHand;\r\n            }\r\n            let courseName = '';\r\n            if (this.props.course){\r\n                courseName= this.props.course.courseName;\r\n            }\r\n            let usesGoogleSheet= false;\r\n            if(this.props.course){\r\n                usesGoogleSheet=(this.props.course.coursePlanSource===\"GoogleSheet\");\r\n            }\r\n            let googleSheetId = ''\r\n            if(this.props.course){\r\n                googleSheetId= this.props.course.googleSheetPlanId;\r\n            };\r\n            console.log(this.props.syncing);\r\n            console.log(this.props.syncError);\r\n            return <div>\r\n                <EditableHeadLine shortHand={shortHand} courseName={courseName} newInput={this.newShortAndTitle} />\r\n                <Panel header={<h3>Kursusplan</h3>} className=\"panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        <Form inline>\r\n                        <FormGroup>\r\n                            <ControlLabel>Google Sheet Id: </ControlLabel>\r\n                            <EditableText text={googleSheetId} newInput={(sheetId)=>this.newGoogleSheetId(sheetId)}/><br/>\r\n                            {googleSheetId && <a href={'https://docs.google.com/spreadsheets/d/' + googleSheetId + '/edit'}>{'https://docs.google.com/spreadsheets/d/' + googleSheetId + '/edit'}</a>}\r\n                        </FormGroup>\r\n\r\n                            <br/>\r\n                                Anvend googleSheet til KursusPlan: <CheckboxComp onCheck={this.handleUsesGoogleSheet} checked={usesGoogleSheet}/>\r\n                        </Form>\r\n                        <Button onClick={()=>this.props.syncCoursePlan()}  disabled={this.props.syncing}>\r\n                            {this.props.syncing ? <span>Synkroniserer kursusplan</span> :\r\n                            <span>Synkronisér Kursusplan</span>}</Button>\r\n                        {this.props.syncing && <img src={ripple} alt=\"loading\"/>}\r\n                        {this.props.syncError && <div>{this.props.syncError}</div>}\r\n                    </div>\r\n                </Panel>\r\n                <Panel header={<h3>Administer brugere</h3>} className=\"panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        <Table responsive hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Brugernavn</th>\r\n                                <th>Navn</th>\r\n                                <th>E-mail</th>\r\n                                <th>Administrator</th>\r\n                                <th>Hjælpelærer</th>\r\n                                <th>Studerende</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.generateUsertableBody()}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"panel-title\">\r\n                            <b>Tilføj nye brugere til kurset</b>\r\n                        </div>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <ControlLabel>\r\n                                    {this.props.label}\r\n                                </ControlLabel>\r\n                                <FormControl value={this.state.csv} label=\"Tilføj brugere\" type=\"textarea\" componentClass=\"textarea\" rows=\"4\" onChange={this.handleCSVChange}/>\r\n                                <HelpBlock>Skriv brugernavne for de nye brugere kommasepareret. Brug evt. CSV-fil eksporteret fra deltagerlisten på CampusNet.</HelpBlock>\r\n                            </FormGroup>\r\n                            <Button onClick={this.handleCSVSubmit}>Tilføj brugere</Button>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </Panel>\r\n                <Panel header={<h3>Fremmøde</h3>}>\r\n                    <Table responsive hover>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Brugernavn</th>\r\n                            <th>Navn</th>\r\n                            <th className=\"rotate\"><div><span>Lektion 1</span></div></th>\r\n                            <th className=\"rotate\"><div><span>Lektion 2</span></div></th>\r\n                            <th className=\"rotate\"><div><span>Lektion 3</span></div></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <td>s134000</td>\r\n                            <td>Christian Budtz</td>\r\n                            <td width=\"20px\"><input id=\"lek1\" type=\"checkbox\" defaultChecked={true}/><label htmlFor=\"lek1\"> </label></td>\r\n                            <td width=\"20px\"><input id=\"lek2\" type=\"checkbox\" defaultChecked={true}/><label htmlFor=\"lek2\"> </label></td>\r\n                            <td width=\"20px\"><input id=\"lek3\" type=\"checkbox\" defaultChecked={true}/><label htmlFor=\"lek3\"> </label></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Panel>\r\n            </div>\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nCourseAdminMain.propTypes = {\r\n    course: PropTypes.shape({courseName: PropTypes.string,\r\n        courseShortHand: PropTypes.string,\r\n        googleSheetPlanId: PropTypes.string,\r\n    }),\r\n    users : PropTypes.array,\r\n    roleChecked: PropTypes.func,\r\n    newUserAdded: PropTypes.func,\r\n    newUserCSVSubmitted: PropTypes.func,\r\n    newShortAndTitle: PropTypes.func,\r\n    usesGoogleSheet: PropTypes.func,\r\n    newGoogleSheetId: PropTypes.func,\r\n    syncError: PropTypes.any,\r\n    syncCoursePlan: PropTypes.func,\r\n    syncing: PropTypes.any\r\n\r\n\r\n}\r\n\r\nCourseAdminMain.defaultProps = {\r\n    course: {}\r\n}","/**\r\n * Created by Christian on 01-08-2017.\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Col, Grid, Row} from \"react-bootstrap\";\r\nimport CourseAdminMenu from \"./components/CourseAdminMenu\";\r\nimport Rip from \"./rest/Rip\";\r\nimport CourseAdminMain from \"./components/CourseAdminMain\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport default class CourseAdminPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        //TODO clean up\r\n        this.getCourses();\r\n        this.state = {\r\n            loading: true,\r\n            courseList: [],\r\n            currentCourse : this.props.course\r\n        }\r\n\r\n    }\r\n\r\n    getCourses() {\r\n        Rip.getJson(this.props.apiUrl + this.props.coursePath + \"/owned\", this.courseCallBack, this.courseCatchBack)\r\n    }\r\n    courseCallBack = (json)=> {\r\n\r\n        let newCurrentCourse;\r\n        if (this.state.currentCourse == null) {\r\n            this.setState({\r\n                courseList: json,\r\n                currentCourse: json[0]\r\n            })\r\n        } else {\r\n            let currentCourseId = this.state.currentCourse.id;\r\n            newCurrentCourse = json[0];\r\n            json.forEach((course, index) => {\r\n                if (course.id === currentCourseId) {\r\n                    newCurrentCourse=course;\r\n                }\r\n            })\r\n            this.setState({\r\n                courseList: json,\r\n                currentCourse: newCurrentCourse,\r\n                syncError: false\r\n            });\r\n        }\r\n        this.fetchUserList(this.state.currentCourse.id);\r\n\r\n    }\r\n\r\n    courseCatchBack = (data) =>{\r\n        this.setState({loading:\"failed\"})\r\n    }\r\n\r\n    courseSelected = (courseId) =>{\r\n        var foundCourses = this.state.courseList.filter((course)=>{\r\n            return course.id===courseId;\r\n        })\r\n        this.fetchUserList(courseId);\r\n        this.setState({\r\n            currentCourse: foundCourses[0]\r\n        });\r\n    };\r\n\r\n    fetchUserList = (courseId) =>{\r\n        this.setState({loading:true});\r\n        Rip.getJson(this.props.apiUrl + this.props.coursePath + '/' + courseId +'/users/list',(users)=> {\r\n            this.setState({users:users, loading: 'done'});\r\n        }, null) //TODO: Catchback\r\n    }\r\n    newCourseSelected = () =>{\r\n        this.setState({loading:true})\r\n        Rip.post(this.props.apiUrl + this.props.coursePath,null,\r\n            (json)=>{\r\n                let courseList = this.state.courseList;\r\n                courseList.push(json);\r\n                this.setState({loading:\"done\", courseList:courseList})\r\n            },\r\n            (errorMsg)=>{\r\n                this.setState({loading:\"failed\"})\r\n                console.log(errorMsg);\r\n            })\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    handleRoleCheck(userId, role, value) {\r\n        Rip.put(this.props.apiUrl + this.props.coursePath + '/' + this.state.currentCourse.id + '/users/' + userId + '/' + role, value,\r\n            (json)=>{\r\n                this.fetchUserList(this.state.currentCourse.id)\r\n            },\r\n            null)\r\n    }\r\n    addUserToCourse(userName, name, email){\r\n        console.log(userName)\r\n        toast.success(\"Bruger \" + userName + \" tilføjet\", {autoClose: 8000});\r\n        let userUpdate = {userName: userName, name: name, email: email, role: \"student\"}\r\n        Rip.postForString(this.currentCourseUrl() + '/users/', userUpdate,\r\n            (String)=>{\r\n                this.fetchUserList(this.state.currentCourse.id)\r\n            },\r\n            null)\r\n    }\r\n\r\n    currentCourseUrl() {\r\n        return this.props.apiUrl + this.props.coursePath + '/' + this.state.currentCourse.id;\r\n    }\r\n\r\n    addUserCSVToCourse(csvString) {\r\n        let usersString = {usersCsv:csvString};\r\n        this.toastLoading = toast(\"Tilføjer brugere...\", {autoClose: false});\r\n        Rip.postForString(this.currentCourseUrl() + '/users/csv', usersString,\r\n            (String)=>{\r\n                toast.dismiss(this.toastLoading);\r\n                toast.success(\"Brugere tilføjet\", {autoClose: 5000});\r\n                this.fetchUserList(this.state.currentCourse.id);\r\n            })\r\n    }\r\n\r\n\r\n    updateCourseShortAndName(short, name) {\r\n        let shortAndName = {shortHand:short,courseName: name};\r\n        Rip.postForString(this.currentCourseUrl() + \"/name\", shortAndName,\r\n            (String)=>{\r\n                this.getCourses()\r\n            },(response)=>{\r\n                response.response.text().then((text)=>{\r\n                    toast.warn(response.status + \": \" + text)\r\n                })\r\n            }\r\n\r\n        )\r\n    }\r\n\r\n    updateCourseUsesGoogleSheet = (checked)=> {\r\n        let usesGoogleSheet = {usesGoogleSheet: checked}\r\n        Rip.postForString(this.currentCourseUrl() + '/usesGoogleSheet', usesGoogleSheet,\r\n            (String)=>{\r\n                this.getCourses()\r\n            })\r\n    }\r\n\r\n    newGoogleSheetId = (id)=>{\r\n        let googleSheetId = {googleSheetId:id}\r\n        Rip.postForString(this.currentCourseUrl() + '/googleSheetId', googleSheetId,\r\n            (String)=>{\r\n                this.getCourses()\r\n            })\r\n    }\r\n    syncCourseCurrentCoursePlan = ()=> {\r\n        this.setState({syncing:true})\r\n        Rip.postForString(this.currentCourseUrl() + '/syncCoursePlan', null,\r\n            (response)=>{\r\n\r\n                if (response.status===500){\r\n                    response.text().then((text)=>{\r\n                        this.setState({syncError: text})\r\n                    })\r\n                    this.setState({syncError: response.text, syncing:false})\r\n                } else {\r\n                    this.getCourses();\r\n                    this.setState({syncError: false, syncing:false})\r\n                }\r\n            },\r\n            (response)=>{\r\n                response.response.text().then((text)=>\r\n                {\r\n                    this.setState({syncError: text, syncing: false})\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    checkForCourseAdmin = ()=> {\r\n        let isCourseAdmin = false;\r\n        if (this.props.user && this.props.user.roles){\r\n            this.props.user.roles.forEach((role)=>{\r\n                if (role.roleName ===\"CourseAdmin\"){\r\n                    isCourseAdmin=true;\r\n                }\r\n            })\r\n        }\r\n        return isCourseAdmin;\r\n    }\r\n\r\n    render(){\r\n        let userIsCourseAdmin = this.checkForCourseAdmin();\r\n        console.log(\"User is course admin: \" + userIsCourseAdmin)\r\n        return <Grid fluid>\r\n\r\n            <Row>\r\n                <Col md={3}>\r\n                    <CourseAdminMenu createCourses={userIsCourseAdmin} loading={this.state.loading} courseClicked={this.courseSelected} newCourseClicked={this.newCourseSelected} courseList={this.state.courseList}/>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <CourseAdminMain course={this.state.currentCourse} users={this.state.users}\r\n                                     loading={this.state.loading}\r\n                                     newUserAdded={(userName, name, email)=>this.addUserToCourse(userName, name, email)}\r\n                                     newUserCSVSubmitted={(csvString)=>this.addUserCSVToCourse(csvString)}\r\n                                     newShortAndTitle={(short,name)=>this.updateCourseShortAndName(short,name)}\r\n                                     usesGoogleSheet={(checked)=>this.updateCourseUsesGoogleSheet(checked)}\r\n                                     newGoogleSheetId={(sheetId)=>this.newGoogleSheetId(sheetId)}\r\n                                     roleChecked={(userId,role,value)=>this.handleRoleCheck(userId,role,value)}\r\n                                     syncError={this.state.syncError}\r\n                                     syncCoursePlan={()=>this.syncCourseCurrentCoursePlan()}\r\n                                     syncing={this.state.syncing}/>\r\n                </Col>\r\n            </Row>\r\n        </Grid>\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nCourseAdminPage.propTypes = {\r\n    apiUrl: PropTypes.string,\r\n    coursePath: PropTypes.string,\r\n    course: PropTypes.any,\r\n    user: PropTypes.any\r\n\r\n}\r\n\r\nCourseAdminPage.defaultProps = {\r\n    apiUrl: '',\r\n    coursePath: '/courses'\r\n}","/**\r\n * Created by Christian on 01-08-2017.\r\n */\r\n\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Col, Grid, Row} from \"react-bootstrap\";\r\nimport Rip from './rest/Rip'\r\nimport {BootstrapTable, TableHeaderColumn} from \"react-bootstrap-table\";\r\nimport CheckboxComp from \"./components/CheckboxComp\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nexport default class PortalAdminPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.getUsers();\r\n        this.state={\r\n            users: []\r\n        }\r\n    }\r\n\r\n    userUrl = this.props.apiUrl + '/users';\r\n    getUsers = ()=>{\r\n        Rip.getJson(this.userUrl, (json)=>{\r\n            json.forEach((user)=>{\r\n                return this.checkUserRoles(user)\r\n            })\r\n            this.setState({users:json})\r\n        })\r\n    }\r\n\r\n    checkUserRoles = (user)=>{\r\n        user.isPortalAdmin=false; user.isCourseAdmin=false;\r\n        if (user.roles){\r\n            user.roles.forEach((role)=>{\r\n                if(role.roleName===\"PortalAdmin\"){\r\n                    user.isPortalAdmin=true;\r\n                }\r\n                if (role.roleName===\"CourseAdmin\"){\r\n                    user.isCourseAdmin=true;\r\n                }\r\n            })\r\n        }\r\n        return user;\r\n    }\r\n\r\n    toggleCourseAdmin = (checked, id)=>{\r\n\r\n        let url = this.userUrl + '/' + id + (checked ?  '/makeCourseAdmin' : '/removeCourseAdmin');\r\n        Rip.post(url,{},\r\n            (json)=>{\r\n            console.log(json);\r\n                this.updateUser(json);\r\n\r\n        },\r\n            (response)=>{\r\n            toast.warning('Opdatering mislykkedes:' + response.message)\r\n        })\r\n    }\r\n\r\n    togglePortalAdmin = (checked, id)=>{\r\n\r\n        let url = this.userUrl + '/' + id + (checked ?  '/makePortalAdmin' : '/removePortalAdmin');\r\n        Rip.post(url,{},\r\n            (json)=>{\r\n                console.log(json);\r\n                toast.info('Updated user')\r\n                this.updateUser(json);\r\n\r\n            },\r\n            (response)=>{\r\n                console.log(response)\r\n            })\r\n    }\r\n\r\n    updateUser = (newUser)=> {\r\n        newUser = this.checkUserRoles(newUser);\r\n        let users = this.state.users;\r\n        users.forEach((user, index, array)=>{\r\n            if (user.id ===newUser.id){\r\n                array[index]=newUser;\r\n            }\r\n        })\r\n        this.setState({users:users})\r\n\r\n\r\n    }\r\n\r\n    checkBoxFormatterPortalAdmin = (cell, row)=>{\r\n        return <CheckboxComp checked={row.isPortalAdmin} onCheck={this.togglePortalAdmin} id={row.id}/>\r\n    };\r\n\r\n    checkBoxFormatterCourseAdmin = (cell, row)=>{\r\n        return <CheckboxComp checked={row.isCourseAdmin} onCheck={this.toggleCourseAdmin} id={row.id}/>\r\n    };\r\n    booleanSortPortalAdmin = (a, b, order)=>{\r\n        let orderInt = a.isPortalAdmin ? 1 : 0;\r\n        orderInt -= b.isPortalAdmin ? 1: 0;\r\n        return order==='desc' ? -orderInt : orderInt;\r\n    };\r\n\r\n    booleanSortCourseAdmin = (a,b,order)=>{\r\n        let orderInt = a.isCourseAdmin ? 1 : 0;\r\n        orderInt -= b.isCourseAdmin ? 1: 0;\r\n        return order==='desc' ? -orderInt : orderInt;\r\n    }\r\n    render(){\r\n        return <Grid >\r\n            <ToastContainer position=\"bottom-right\" autoClose={2000}/>\r\n            <Row>\r\n                <Col>\r\n                    {/*<Panel header={<h3>Fremmøde</h3>}>*/}\r\n                        {/*<Table responsive hover>*/}\r\n                            {/*<thead>*/}\r\n                            {/*<tr>*/}\r\n                                {/*<th>Brugernavn</th>*/}\r\n                                {/*<th>Navn</th>*/}\r\n                                {/*<th>*/}\r\n                                    {/*<OverlayTrigger placement={'top'} overlay={<Tooltip>Giver brugeren rettigheder til at oprette kurser</Tooltip>}>*/}\r\n                                        {/*<div>Kursus Administrator</div>*/}\r\n                                    {/*</OverlayTrigger>*/}\r\n                                {/*</th>*/}\r\n                                {/*<th><div><span>Portal Administrator</span></div></th>*/}\r\n                            {/*</tr>*/}\r\n                            {/*</thead>*/}\r\n                            {/*<tbody>*/}\r\n                            {/*<tr>*/}\r\n                                {/*<td>s134000</td>*/}\r\n                                {/*<td>Christian Budtz</td>*/}\r\n                                {/*<td width=\"20px\"><input id=\"lek1\" type=\"checkbox\" defaultChecked={true}/><label htmlFor=\"lek1\"> </label></td>*/}\r\n                                {/*<td width=\"20px\"><input id=\"lek2\" type=\"checkbox\" defaultChecked={true}/><label htmlFor=\"lek2\"> </label></td>*/}\r\n                            {/*</tr>*/}\r\n                            {/*</tbody>*/}\r\n                        {/*</Table>*/}\r\n\r\n                    {/*</Panel>*/}\r\n                    <BootstrapTable data={this.state.users} pagination={true} options={{paginationPosition:'top',\r\n                        sizePerPageList: [ {\r\n                        text: '10', value: 10\r\n                    }, {\r\n                        text: '100', value: 100\r\n                    }, {\r\n                        text: 'All', value: this.state.users.length\r\n                    } ]}}>\r\n                        <TableHeaderColumn dataField='id' key={0} isKey={true} hidden={true} >Id</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='userName' key={1} dataSort={true}>BrugerNavn</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='firstName' key={1} dataSort={true}>Fornavn</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='lastName' key={1} dataSort={true}>Efternavn</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='email' key={1} dataSort={true}>Email</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='isPortalAdmin' key={1} dataFormat={this.checkBoxFormatterPortalAdmin} dataSort={true} sortFunc={this.booleanSortPortalAdmin}>PortalAdmin</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='isCourseAdmin' key={1} dataFormat={this.checkBoxFormatterCourseAdmin} dataSort={true} sortFunc={this.booleanSortCourseAdmin}>CourseAdmin</TableHeaderColumn>\r\n\r\n                    </BootstrapTable>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Grid>\r\n\r\n    }\r\n}\r\n\r\nPortalAdminPage.propTypes={\r\n    apiUrl: PropTypes.string\r\n}","/**\r\n * Created by Christian on 07-04-2017.\r\n */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Row, Col, Grid, Button, FormGroup, ControlLabel, FormControl, Form, Label} from 'react-bootstrap';\r\nimport {observer} from \"mobx-react\";\r\n\r\nclass ProfilePage extends Component {\r\n    deletedb = ()=>{\r\n        const answer = window.confirm(\"Er du sikker på at du vil slette din database?!! Alle data vil gå tabt\");\r\n        if (answer){\r\n            this.props.store.deletedb();\r\n        }\r\n    };\r\n    createDB = ()=>{\r\n        this.props.store.createDB();\r\n    };\r\n    updatePass = ()=> {\r\n        this.props.store.updatePass();\r\n    };\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n            firstName:props.user.firstName,\r\n            lastName:props.user.lastName,\r\n            email:props.user.email\r\n        }\r\n\r\n\r\n\r\n    }\r\n    updateUserBtnPressed = ()=>{\r\n        let updatedUser= this.props.user;\r\n        updatedUser.firstName = this.state.firstName;\r\n        updatedUser.lastName = this.state.lastName;\r\n        updatedUser.email = this.state.email;\r\n        this.props.updateUser(updatedUser);\r\n    };\r\n    resetForm = ()=>{\r\n        this.setState({\r\n            firstName:this.props.user.firstName,\r\n            lastName:this.props.user.lastName,\r\n            email:this.props.user.email\r\n        })\r\n    };\r\n    render(){\r\n        let dbInfo = this.props.store.dbInfo;\r\n        return <Grid>\r\n            <Row>\r\n                <Col xsOffset={3} xs={6} className=\"text-center\">\r\n                    <Form >\r\n                        <FormGroup>\r\n                            <ControlLabel>Fornavn</ControlLabel>\r\n                            <FormControl type=\"text\" value={this.state.firstName} onChange={(e)=>this.setState({firstName:e.target.value})}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <ControlLabel>Efternavn</ControlLabel>\r\n                            <FormControl type=\"text\" value={this.state.lastName} onChange={(e)=>this.setState({lastName:e.target.value})}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <ControlLabel>Email</ControlLabel>\r\n                            <FormControl type=\"text\" value={this.state.email} onChange={(e)=>this.setState({email:e.target.value})}>\r\n                            </FormControl>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <Button onClick={this.updateUserBtnPressed}>Opdater Bruger</Button>\r\n                    <Button onClick={this.resetForm}>Reset</Button>\r\n                    <h4>Din personlige Database</h4>\r\n                    {!this.props.store.loading && dbInfo.id &&\r\n                    <div>\r\n                        <Label>Host</Label><div>{dbInfo.hostUrl}</div>\r\n                        <Label>BrugerNavn</Label><div>{dbInfo.id}</div>\r\n                        <Label>Kodeord</Label><div>{dbInfo.pass}</div>\r\n                        <Label>Database navn</Label><div>{dbInfo.id}</div>\r\n                        <Label>Skriverettigheder</Label><div>{dbInfo.revoked ? \"Nej - reducer din database størrelse til under 50 MB\" :\"Ja - Maks database størrelse er 50 MB\"}</div>\r\n                        <Label>Databasestørrelse</Label><div>{dbInfo.size} MB</div>\r\n                        <Button onClick={this.updatePass}>Nyt kodeord</Button>\r\n                        <Button bsStyle={\"danger\"} onClick={this.deletedb}>Slet din database</Button>\r\n                    </div>\r\n\r\n                    }\r\n                    {!this.props.store.loading && !dbInfo.id &&\r\n                    <div>\r\n                        <Button onClick={this.createDB}>Opret ny database</Button>\r\n                    </div>\r\n                    }\r\n                    {this.props.store.loading &&\r\n                        <div>Opdaterer database...</div>}\r\n\r\n                </Col>\r\n            </Row>\r\n        </Grid>\r\n    }\r\n}\r\n\r\nProfilePage.propTypes = {\r\n    updateUser: PropTypes.func,\r\n    user: PropTypes.shape({\r\n        firstName:PropTypes.string,\r\n        lastName:PropTypes.string,\r\n        email:PropTypes.string\r\n    })\r\n}\r\n\r\nexport default observer(ProfilePage)","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./App.css\";\r\nimport TopMenu from \"./TopMenu.js\";\r\nimport Agenda from \"./AgendaPage.jsx\";\r\nimport JwtHandler from \"./jwthandler\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport CourseInfoPage from \"./CourseInfoPage\";\r\nimport SyllabusPage from \"./SyllabusPage\";\r\nimport ForumPage from \"./ForumPage\";\r\nimport CourseAdminPage from \"./CourseAdminPage\";\r\nimport PortalAdminPage from \"./PortalAdminPage\";\r\nimport Rip from \"./rest/Rip\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\n\r\n\r\nexport default class App extends Component {\r\n    generateAdminDropDown = (user)=>{\r\n        let portalAdmin = false;\r\n        user.roles.forEach((role)=>{\r\n            if (role.roleName === \"PortalAdmin\") {portalAdmin = true}\r\n        })\r\n        let courseAdmin = false;\r\n        user.roles.forEach((role)=>{\r\n            if (role.roleName ===\"CourseAdmin\") {courseAdmin = true}\r\n        })\r\n        if (user.adminOfCourses){\r\n            courseAdmin=true;\r\n        }\r\n        if (courseAdmin || portalAdmin) {\r\n            var adminMenu = {type: \"NavDropDown\", id: 10, text: \"Admin\", items: []}\r\n            if (courseAdmin) {\r\n                adminMenu.items.push({type: \"MenuItem\", id: {component: \"CourseAdmin\"}, text: \"Course Admin\"})\r\n            }\r\n            if (portalAdmin) {\r\n                adminMenu.items.push({type: \"MenuItem\", id: {component: \"PortalAdmin\"}, text: \"Portal Admin\"})\r\n            }\r\n            return adminMenu;\r\n        } else return {};\r\n\r\n    };\r\n    userUpdate = (user)=>{\r\n        Rip.post(this.props.apiUrl + \"/users/self\", user, (user)=>{\r\n            this.setState({\r\n                user: user\r\n            })\r\n        })\r\n    };\r\n    updateLinks = (links)=>{\r\n        let course = this.state.course;\r\n        course.courseLinks = links;\r\n        this.setState({course:course})\r\n        Rip.put(this.props.apiUrl + '/courses/' + this.state.course.id + '/links', links,\r\n            (json)=>{\r\n                this.setState({course: json})\r\n                toast.info(\"links opdateret\")\r\n            },\r\n            (response)=>{\r\n                toast.warning(\"links kunne ikke opdateres -\" + response.message)\r\n            }\r\n        )\r\n    };\r\n    saveInfoContent = (content)=>{\r\n        let course = this.state.course;\r\n        course.courseInfoLines= content;\r\n        this.setState({course:course})\r\n        Rip.put(this.props.apiUrl + \"/courses/\" + this.state.course.id + \"/courseinfo\", content,\r\n            (json)=>{\r\n            toast.info(\"Kursusindhold opdateret\");\r\n            },\r\n            (response)=>{\r\n            toast.warning(\"Kursusindhold kunne ikke opdateres. \" + response.message)\r\n            })\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log()\r\n        const user = JwtHandler.getUser();\r\n        console.log(\"user passed to App:\");\r\n        console.log(user);\r\n\r\n        if (user) {\r\n            console.log(\"User Found\");\r\n            props.stores.TokenStore.setToken(JwtHandler.getToken())\r\n            this.fetchUser(user.id);\r\n            this.state = {\r\n                user:user,\r\n                navbar: [{type: \"NavItem\", id:-2, text:\"Loading\"}],\r\n                avatar: {id: user.userName},\r\n                activePage: {component: \"Login\"},\r\n                showModal:false\r\n            }\r\n\r\n        } else {\r\n            this.state = {\r\n                user: null,\r\n                navbar: [],\r\n                avatar: {id: null},\r\n                pages: {\r\n                    0: {period: \"F17\", course: \"02324\", component: \"Agenda\"},\r\n                    1: {period: \"F17\", course: \"02324\", component: \"\"}\r\n                },\r\n                activePage: {component: \"Login\"},\r\n                course: {\r\n                    courseLines:[],\r\n                    courseId: \"02324F17\",\r\n                    courseName: \"Videregående programmering\",\r\n                    coursePlanId: \"1Zj-1eLX67PQRzM7m1icq2vSXzbHn2iFvN4V9cUHTWQo\",\r\n                    coursePlanSource: \"GoogleSheet\",\r\n                    courseLinks:[]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchUser(id) {\r\n        Rip.getJson(this.props.apiUrl + '/users/self' , (json) => { // '/users/' + id\r\n            console.log('got user data')\r\n            console.log(json);\r\n            if(json.agendaInfoMap && !json.activeAgenda){\r\n                json.activeAgenda= Object.keys(json.agendaInfoMap)[0];\r\n            }\r\n            console.log(\"generating agenda dropdown\")\r\n            let agendaDropDown = this.generateAgendaDropDown(json.agendaInfoMap, json.activeAgenda);\r\n            console.log(\"generated agenda dropdown\")\r\n            let adminDropDown = this.generateAdminDropDown(json);\r\n            console.log(\"generated admin dropdown\")\r\n            this.setState({\r\n                user: json,\r\n                navbar: [\r\n                    agendaDropDown\r\n                    ,\r\n                    {type: \"NavItem\", id: {component: \"Agenda\"}, text: \"Agenda\"},\r\n                    {type: \"NavItem\", id: {component: \"CourseInfo\"}, text: \"Kursus information\"},\r\n                    // {type: \"NavItem\", id: {component: \"Syllabus\"}, text: \"Pensum\", component: \"Syllabus\"},\r\n                    // {type: \"NavItem\", id: {component: \"Forum\"}, text: \"Forum\", component: \"Forum\"},\r\n                    adminDropDown\r\n                ]\r\n\r\n                ,\r\n                avatar: {id: json.userName},\r\n                pages: {\r\n                    0: {period: \"F17\", course: \"02324\", component: \"Agenda\"},\r\n                    1: {period: \"F17\", course: \"02324\", component: \"\"}\r\n                },\r\n                activePage: {period: \"F17\", course: \"02324\", component: \"Agenda\"},\r\n                course: {\r\n                    courseLines:[],\r\n                    courseId: \"Loading course\",\r\n                    courseName: \"\",\r\n                    coursePlanId: \"\",\r\n                    coursePlanSource: \"\"\r\n                }\r\n            })\r\n            this.fetchCourse(this.state.user.activeAgenda,this.state.user.agendaInfoMap[this.state.user.activeAgenda].agendaId)\r\n        }, (response)=>{\r\n            console.log(response)\r\n        })\r\n    }\r\n\r\n    generateAgendaDropDown = (agendaInfoMap, activeAgenda) =>{\r\n        let content = {};\r\n\r\n        content.type = \"NavDropDown\"\r\n        if (agendaInfoMap && activeAgenda==null){\r\n            console.log(\"setting active agenda\")\r\n            // activeAgenda = Object.keys(agendaInfoMap)[0];\r\n        }\r\n        if (agendaInfoMap && activeAgenda && agendaInfoMap[activeAgenda]) {\r\n            content.id = activeAgenda\r\n\r\n            content.text = agendaInfoMap[activeAgenda].courseName\r\n            console.log(agendaInfoMap)\r\n            content.items = [];\r\n            for (let key in agendaInfoMap) {\r\n                content.items.push({\r\n                    type: \"MenuItem\",\r\n                    id: {component: 'Agenda', id: key, agendaId: agendaInfoMap[key].agendaId},\r\n                    text: agendaInfoMap[key].courseName\r\n                })\r\n            }\r\n\r\n        } else {\r\n            content.text = \"Du er ikke tilknyttet kurser\"\r\n            content.items=[];\r\n        }\r\n        console.log(content)\r\n\r\n        return content;\r\n\r\n    }\r\n\r\n    onMenuSelect = (e)=>{\r\n        if(e.id){\r\n            let updatedUser = this.state.user;\r\n            let agendaDropDown = this.generateAgendaDropDown(this.state.user.agendaInfoMap, e.id);\r\n            let adminDropDown = this.generateAdminDropDown(this.state.user);\r\n            let newNavbar = [\r\n                agendaDropDown\r\n                ,\r\n                {type: \"NavItem\", id: {component: \"Agenda\"}, text: \"Agenda\"},\r\n                {type: \"NavItem\", id: {component: \"CourseInfo\"}, text: \"Kursus information\"},\r\n                // {type: \"NavItem\", id: {component: \"Syllabus\"}, text: \"Pensum\", component: \"Syllabus\"},\r\n                // {type: \"NavItem\", id: {component: \"Forum\"}, text: \"Forum\", component: \"Forum\"},\r\n                adminDropDown\r\n            ]\r\n            updatedUser.activeAgenda = e.id;\r\n            //TODO update user in db\r\n            Rip.postForString(this.props.apiUrl + \"/users/self\", updatedUser, (string)=>{\r\n            })\r\n            this.setState({user: updatedUser, navbar:newNavbar, activePage:{component: \"Agenda\"}})\r\n\r\n            this.fetchCourse(e.id, e.agendaId);\r\n        } else {\r\n            this.setState({activePage: e})\r\n        }\r\n    }\r\n\r\n    onProfileEditSelect = ()=>{\r\n        this.setState({activePage:{component:\"ProfilePage\"}})\r\n    };\r\n\r\n    fetchCourse= (courseId, agendaId)=> {\r\n        Rip.getJson(this.props.apiUrl + \"/courses/\" + courseId, (json)=>{\r\n            if (json.admins && json.admins.includes(this.state.user.id)){\r\n                console.log(\"user is courseAdmin\")\r\n                console.log(\"test\")\r\n            }\r\n            this.setState({\r\n                course:json\r\n            })\r\n            this.fetchCoursePlan(json.courseplanId, agendaId);\r\n        })\r\n    }\r\n\r\n    fetchCoursePlan= (courseplanId, agendaId)=> {\r\n        console.log(\"Fethcing coursePlan: \" + courseplanId)\r\n        this.setState({\r\n            coursePlanLoading:true\r\n        })\r\n        if (courseplanId===null){\r\n            this.setState({coursePlanLoading:\"failed\"})\r\n            toast.error(\"Dette Kursus har ikke tilknyttet en kursusplan endnu\")\r\n        }\r\n        Rip.getJson(this.props.apiUrl + \"/courseplans/\" + courseplanId,\r\n            (json)=>{\r\n                if (json.get)\r\n                    console.log(\"FoundCoursePlan: \")\r\n                this.setState({\r\n                    coursePlan: json,\r\n                    coursePlanLoading: false\r\n                })\r\n                this.fetchAgenda(agendaId)\r\n            }, (response)=>{\r\n                if (response.status===404 || response.status===400){\r\n                    response.text().then((text)=>{\r\n                        this.setState({\r\n                            coursePlan:null,\r\n                            coursePlanLoading:\"failed\",\r\n                            coursePlanLoadErrorMsg: text\r\n                        })\r\n                    })\r\n\r\n                }\r\n                console.log(response);\r\n            })\r\n    }\r\n\r\n    fetchAgenda = (agendaId)=> {\r\n        Rip.getJson(this.props.apiUrl + \"/agendas/\" + agendaId,\r\n            (json) => {\r\n                console.log(\"Found Agenda:\")\r\n                console.log(json);\r\n                this.setState({agenda:json})\r\n                this.mergeAgendaWithCoursePlan()\r\n            })\r\n    }\r\n\r\n    mergeAgendaWithCoursePlan = ()=> {\r\n        let coursePlan = this.state.coursePlan;\r\n        //Loop through All courseAcitivities\r\n        coursePlan.courseActivityList.forEach((courseActivity, index, activityArray)=>{\r\n            this.mergeAgendaWithCourseActivity(courseActivity.activityElementList);\r\n        })\r\n        this.setState({coursePlan:coursePlan})\r\n\r\n    }\r\n\r\n    mergeAgendaWithCourseActivity = (courseActivity)=> {\r\n        //Loop through all activities' elements\r\n        courseActivity.forEach((activityElement, index, activityElementArray)=>{\r\n            this.mergeAgendaWithAcvitityElement(activityElement);\r\n        })\r\n    }\r\n\r\n\r\n    mergeAgendaWithAcvitityElement(activityElement) {\r\n        let finished = 0.0;\r\n        //Loop through all subelements of the elements (Activity->Element->subElement\r\n        activityElement.subElements.forEach((activitySubElement, index, activitySubElementArray)=>{\r\n            //if the agenda has metadata associated to the activityelement\r\n            if (this.state.agenda.elementMetaData[activityElement.id]){\r\n                //Lookup metadata for Element\r\n                let Agendaelement = this.state.agenda.elementMetaData[activityElement.id]\r\n\r\n                //Check if Element has metadata\r\n                if(Agendaelement.metaDataList[activitySubElement.id]) {\r\n                    activitySubElement.checked = Agendaelement.metaDataList[activitySubElement.id].checked\r\n                    activitySubElement.progression = Agendaelement.metaDataList[activitySubElement.id].progression\r\n                    activitySubElement.notes = Agendaelement.metaDataList[activitySubElement.id].notes\r\n                    if (activitySubElement.checked===true)\r\n                        finished++;\r\n                }\r\n            }\r\n\r\n        })\r\n\r\n        activityElement.progress = finished / activityElement.subElements.length;\r\n\r\n    }\r\n\r\n\r\n    onLogout = (hard)=>{\r\n        console.log(\"Logging out\")\r\n        JwtHandler.clearUser();\r\n        this.setState({user: null , avatar: {id:null}, navbar: [{type:\"NavItem\", id:-1, text:\"Please Login\"},\r\n        ], activePage:{component:\"Login\"}\r\n        });\r\n    }\r\n\r\n    getComponent = ()=> {\r\n        const component = this.state.activePage.component;\r\n        if (component === \"Agenda\") {\r\n            return <Agenda course={this.state.course} coursePlan={this.state.coursePlan}\r\n                           coursePlanLoading={this.state.coursePlanLoading}\r\n                           apiUrl={this.props.apiUrl}\r\n                           handleActivityClick={this.handleActivityClick}\r\n                           handleSubElementCheck={this.handleSubElementCheck}\r\n                           handleSubElementNotes={this.handleSubElementNotes}\r\n                           activitySubElements={this.state.activitySubElements}\r\n                           activeActivityElement={this.state.activeActivityElement}\r\n                           activeActivityElementId={this.state.activeActivityElementId}\r\n                           showModal={this.state.showModal}\r\n                           hideModal={this.hideModal}\r\n                // user={this.state.user}\r\n            />\r\n        } else if (component === \"CourseInfo\") {\r\n            return <CourseInfoPage user={this.state.user} content={this.state.course.courseInfoLines} course={this.state.course} apiUrl={this.props.apiUrl}\r\n            saveContent={this.saveInfoContent}/>\r\n        } else if (component === \"Syllabus\") {\r\n            return <SyllabusPage course={this.state.course} apiUrl={this.props.apiUrl}/>\r\n        } else if (component === \"Forum\") {\r\n            return <ForumPage course={this.state.course} apiUrl={this.props.apiUrl}/>\r\n        } else if (component === \"CourseAdmin\") {\r\n            return <CourseAdminPage user={this.state.user} course={this.state.course} apiUrl={this.props.apiUrl} />\r\n        } else if (component === \"PortalAdmin\") {\r\n            return <PortalAdminPage course={this.state.course} apiUrl={this.props.apiUrl}/>\r\n        } else if (component === \"ProfilePage\") {\r\n            return <ProfilePage store={this.props.stores.ProfileStore} user={this.state.user} updateUser={(user)=>this.userUpdate(user)}/>\r\n        } else {\r\n            return <LoginPage course={this.state.course} apiUrl={this.props.apiUrl}/>\r\n        }\r\n\r\n    };\r\n\r\n    handleActivityClick = (activity, activityElement)=>{\r\n        console.log(\"Got activityCLick: \")\r\n        console.log(activityElement)\r\n        if (activityElement.activityElementType === \"GoogleSheet\") {\r\n            this.setState({\r\n                activitySubElements:activityElement.subElements,\r\n                activeActivityElement: activityElement.title,\r\n                activeActivityElementId: activityElement.id,\r\n                showModal:true,\r\n                activeActivityId: activity.id\r\n            })\r\n\r\n        } else {\r\n            window.open(activityElement.hyperLink);\r\n        }\r\n    }\r\n\r\n    handleSubElementCheck = (checked, activityId, activityElementId, activitySubElementId)=>{\r\n        let newAgenda = this.state.agenda;\r\n        if (newAgenda.elementMetaData) {\r\n            this.ensureTree(newAgenda, activityElementId, activitySubElementId);\r\n            console.log(newAgenda)\r\n            newAgenda.elementMetaData[activityElementId].metaDataList[activitySubElementId].checked = checked\r\n            newAgenda.elementMetaData[activityElementId].metaDataList[activitySubElementId].progression = checked?1:0;\r\n        }\r\n        this.setState({\r\n            agenda: newAgenda\r\n        })\r\n        Rip.postForString(this.props.apiUrl + \"/agendas\",this.state.agenda,(json)=>{\r\n        });\r\n        this.mergeAgendaWithCoursePlan();\r\n    }\r\n\r\n\r\n\r\n    handleSubElementNotes = (text, activityId,activElementId, activitySubElementId)=>{\r\n        let newAgenda = this.state.agenda;\r\n        if (newAgenda.elementMetaData){\r\n            this.ensureTree(newAgenda, activElementId,activitySubElementId);\r\n            console.log(\"Setting notes: \" + activElementId + \" , \" + activitySubElementId);\r\n            newAgenda.elementMetaData[activElementId].metaDataList[activitySubElementId].notes = text;\r\n        }\r\n        this.setState({agenda:newAgenda})\r\n        Rip.postForString(this.props.apiUrl + \"/agendas\",this.state.agenda,(json)=>{\r\n            console.log(\"everything is awesome again!!\")\r\n        });\r\n        this.mergeAgendaWithCoursePlan();\r\n\r\n    }\r\n    ensureTree = (newAgenda, activityElementId, activitySubElementId)=> {\r\n\r\n        if (newAgenda.elementMetaData[activityElementId] == null) {\r\n            newAgenda.elementMetaData[activityElementId] = {};\r\n        }\r\n        if (newAgenda.elementMetaData[activityElementId].metaDataList == null) {\r\n            newAgenda.elementMetaData[activityElementId].metaDataList = {};\r\n        }\r\n        if (newAgenda.elementMetaData[activityElementId].metaDataList[activitySubElementId] == null) {\r\n            newAgenda.elementMetaData[activityElementId].metaDataList[activitySubElementId] = {}\r\n        }\r\n    }\r\n\r\n    hideModal = ()=>{\r\n        this.setState({showModal:false})\r\n    }\r\n\r\n    render() {\r\n        console.log(\"main state:\");\r\n        console.log(this.state);\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <TopMenu apiUrl={this.props.apiUrl} menuItems={this.state.navbar} avatar={this.state.avatar}\r\n                         activeId={this.state.activePage}\r\n                         onSelect={this.onMenuSelect} onLogout={this.onLogout}\r\n                         onProfileEdit={this.onProfileEditSelect}\r\n                         onLinksUpdated={this.updateLinks}\r\n                         user={this.state.user} course={this.state.course}\r\n                         links={this.state.course ? this.state.course.courseLinks: []}\r\n                />\r\n                {this.getComponent()}\r\n                <ToastContainer position=\"bottom-right\" autoClose={2000}/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nApp.propTypes = {\r\n    apiUrl : PropTypes.string\r\n}\r\nApp.defaultProps = {\r\n    apiUrl: '' //for deployment at same root\r\n}\r\n","import {decorate, observable, action, reaction, computed} from 'mobx';\r\nimport {toast} from 'react-toastify';\r\n\r\nclass TokenStore {\r\n    token = window.localStorage.getItem('jwt');\r\n\r\n    constructor(){\r\n        reaction(\r\n            ()=>this.token,\r\n            token => {\r\n                if (token){\r\n                    window.localStorage.setItem('jwt', token);\r\n                } else {\r\n                    window.localStorage.removeItem('jwt');\r\n                }\r\n            })\r\n        this.startAutoCheck();\r\n    }\r\n\r\n    setToken(token){\r\n        this.token = token;\r\n        this.startAutoCheck();\r\n    }\r\n\r\n    get user(){\r\n        if (!this.token) return null;\r\n        return this.decodeClaims(this.token).user;\r\n    }\r\n\r\n    get sampleViewer(){\r\n        return this.checkUserHasOneOfRoles([\"Læseprøve\", \"Administrator\"]);\r\n    }\r\n\r\n    get fullViewer(){\r\n        return this.checkUserHasOneOfRoles([\"Fuldtekst\",\"Administrator\"]);\r\n    }\r\n\r\n    get admin(){\r\n        return this.checkUserHasOneOfRoles([\"Administrator\"]);\r\n    }\r\n\r\n    checkUserHasOneOfRoles = (roles)=>{\r\n        let hasRole = false;\r\n        if (this.token && this.getClaims().user && this.getClaims().user.roles) {\r\n            roles.forEach((role) => {\r\n                this.getClaims().user.roles.forEach((userRole) => {\r\n                    if (role === userRole.roleName) hasRole = true;\r\n                })\r\n            })\r\n        }\r\n        return hasRole;\r\n    };\r\n\r\n    getClaims = ()=>{\r\n        return this.decodeClaims(this.token);\r\n    };\r\n\r\n    decodeClaims = (token) => {\r\n        if (!token) return null;\r\n        const claims = token.split(\".\")[1];\r\n        //const decodedClams = decodeURIComponent(encodeURI(window.atob(claims)));\r\n        const decodedClams = decodeURIComponent(escape(window.atob(claims))); //FIXME temp fix with encoding issue\r\n        return JSON.parse(decodedClams);\r\n    };\r\n\r\n    logout(exp) {\r\n        this.token = null;\r\n        clearTimeout(this.timer);\r\n        if (exp) {\r\n            debugger;\r\n            toast.warn(\"Dit login er udløbet. Log venligst ind igen\")\r\n        }\r\n    }\r\n\r\n    startAutoCheck() {\r\n        if (!this.token) return;\r\n        const exp = new Date(this.getClaims().exp * 1000);\r\n        const now = new Date();\r\n        const timeOut = (exp - now) - 10000;\r\n        this.timer = setTimeout(()=>\r\n                this.logout(true)\r\n            , timeOut);\r\n    }\r\n}\r\ndecorate(TokenStore, {\r\n    token: observable,\r\n    setToken: action,\r\n    user: computed,\r\n    sampleViewer:computed,\r\n    fullViewer:computed,\r\n    admin:computed,\r\n    logout: action,\r\n    updateSelf:action\r\n\r\n});\r\n\r\nexport default TokenStore;","import {action, decorate, observable, reaction} from 'mobx';\r\nimport Rip from \"../rest/Rip\";\r\n\r\n\r\nclass ProfileStore {\r\n    user = null;\r\n    dbInfo = {id: null, pass: null, revoked:null,hostUrl:\"\"};\r\n    tokenStore = {user:\"\"};\r\n    apiUrL = \"\";\r\n    loading = \"false\";\r\n\r\n    constructor(api){\r\n        this.apiUrL=api;\r\n        this.fetchDb();\r\n        reaction(()=> this.tokenStore.user\r\n            ,   this.fetchDb\r\n        )\r\n\r\n    }\r\n\r\n    createDB = ()=>{\r\n        if (this.tokenStore.user){\r\n            console.log(\"Creating own db\");\r\n            this.loading = true;\r\n            Rip.createOwnDb(this.apiUrL,this.tokenStore.user.userName,\r\n                (json)=>{\r\n                    this.dbInfo = json;\r\n                    this.loading = false;\r\n                    debugger;\r\n                },\r\n                ()=>{\r\n                this.loading = false;\r\n                    this.fetchDb()\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    updatePass = ()=>{\r\n        this.loading = true;\r\n        Rip.updateOwnPass(this.apiUrL, this.tokenStore.user.userName,\r\n            (json)=>{\r\n            this.dbInfo = json;\r\n            this.loading = false;\r\n            },\r\n            ()=>{\r\n            this.loading = false;\r\n            this.fetchDb();\r\n            }\r\n            )\r\n    }\r\n\r\n    fetchDb=() =>{\r\n        this.loading = true;\r\n        if (this.tokenStore.user) {\r\n            console.log(\"Fetching Own DB\" );\r\n            Rip.getOwnDb(this.apiUrL, this.tokenStore.user.userName, (json)=>{\r\n                this.dbInfo=json;\r\n                this.loading = false;\r\n            }, ()=>{\r\n                this.dbInfo= {};\r\n                this.loading = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    deletedb = ()=>{\r\n        if (this.tokenStore.user){\r\n            console.log(\"Deleting own DB\");\r\n            this.loading  = true;\r\n            Rip.deleteOwnDb(this.apiUrL,this.tokenStore.user.userName,\r\n                ()=>{\r\n                    this.loading = false;\r\n                    this.fetchDb();\r\n                },\r\n                ()=>{\r\n                    this.loading = false;\r\n                    this.fetchDb()\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\ndecorate(ProfileStore,{\r\n    user:observable,\r\n    dbInfo:observable,\r\n    tokenStore: observable,\r\n    loading: observable,\r\n    createDb: action,\r\n    fetchDb: action,\r\n    deletedb: action\r\n\r\n});\r\n\r\nexport default  ProfileStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import 'bootstrap/dist/css/bootstrap-theme.css';\r\nimport './index.css';\r\nimport Config from './config';\r\nimport TokenStore from \"./stores/TokenStore\";\r\nimport ProfileStore from \"./stores/ProfileStore\";\r\n\r\nexport const styles = {a:{cursor:\"pointer\", color:\"#337ab7\"}}\r\n\r\n//Some code to extract a potential token....\r\nconst token = getParameterByName(\"token\");\r\nconsole.log(token);\r\nif (token!=null && token.length>0){\r\n    //Store token and redirect to baseURL\r\n    localStorage.setItem(\"portal-jwt-Token\",token);\r\n    window.location.replace(\"/\");\r\n}\r\n// Base React class\r\n\r\nconst api =  Config.ApiPath ? Config.ApiPath + \"/rest\" : \"/rest\"\r\n\r\nconst stores = {\r\n    TokenStore : new TokenStore(),\r\n    ProfileStore: new ProfileStore(api)\r\n}\r\nstores.ProfileStore.tokenStore =stores.TokenStore\r\nReactDOM.render(\r\n    //set apiUrl for deployment with seperate api host name eg: https://diplomportal.herokuapp.com/rest\r\n  <App stores={stores} apiUrl={api} name=\"DiplomPortal\"/>,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction getParameterByName(name, url) {\r\n    if (!url) url = window.location.href;\r\n    //name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\r\n        results = regex.exec(url);\r\n    if (!results) return null;\r\n    if (!results[2]) return '';\r\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n}","module.exports = __webpack_public_path__ + \"static/media/ripple.ddb71c78.svg\";"],"sourceRoot":""}